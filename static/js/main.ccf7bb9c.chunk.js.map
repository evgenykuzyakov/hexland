{"version":3,"sources":["components/Board.js","pages/GL.js","shaders/vs.js","shaders/fs.js","App.js","index.js"],"names":["allCells","MaxSize","Math","pow","StartOffsetX","StartOffsetY","RootCellId","level","x","NumLevels","y","MinBalance","Big","DrawGas","mul","toFixed","intToColor","c","toString","padStart","s","JSON","stringify","p2c","p","trunc","cellKey","cellIdStr","NearConfig","contractName","Board","contract","ctx","redraw","this","setState","refreshAllowance","state","pixelQueue","pendingPixels","pending","sendQueueTimer","numFailedTxs","needRedraw","renderLocal","cellIds","a","get_cells_json","cell_ids","cells","reduce","acc","cellId","i","ls","get","nonce","colors","Array","CellSize","fill","cell","set","color","w","fillStyle","fillRect","imageData","createImageData","data","off","j","index","putImageData","q","length","splice","getCell","internalRender","newCellId","internalPaint","push","internalRedraw","get_storage_balance","account_id","account","accountId","balance","accountBalance","sort","b","localeCompare","pixels","refreshAccountBalance","draw_json","lt","indexOf","console","log","concat","forEach","ready","clearTimeout","sendQueue","setTimeout","pingQueue","ab","parseInt","substring","colorToInt","sp","modifyPixel","fetchCells","newCells","Object","entries","parse","oldCell","setCell","Sq3","sqrt","DxA","DxB","lastMousePos","isDrawMode","view","zoom","aspect","mouseToAb","e","clientX","clientY","rect","target","getBoundingClientRect","dx","dy","dxdyToAb","width","height","GlPage","props","canvasEl","useRef","berryclub","_near","useState","board","setBoard","propsDraw","draw","useEffect","current","getContext","drawNow","dist","na","nb","cy","cx","ta","tb","best","minD","d","gl","programInfo","twgl","arrays","a_position","a_texcoord","a_ab","numComponents","TexSize","bufferInfo","canvas","document","createElement","clearRect","textures","fromCanvas","src","mag","NEAREST","min","wrap","CLAMP_TO_EDGE","refreshCells","setInterval","requestAnimationFrame","render","time","viewport","uniforms","resolution","texSize","pos","u_diffuse","useProgram","program","setupRender","addEventListener","buttons","da","db","preventDefault","newZoom","max","exp","deltaY","oa","ob","va","vb","resize","pixelRatio","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","assign","ref","className","networkId","nodeUrl","archivalNodeUrl","walletUrl","App","connected","isNavCollapsed","random","_initNear","then","signedIn","signedAccountId","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","walletConnection","getAccountId","viewMethods","changeMethods","requestSignIn","signOut","_accountId","requests","slice","r","cardId","recentCards","unshift","lsKeyRecentCards","alert","logOut","passProps","header","onClick","type","id","name","style","minWidth","value","onChange","float","div","role","aria-hidden","href","data-ribbon","title","React","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ccf7bb9c.chunk.js","sourcesContent":["import Big from \"big.js\";\nimport {NearConfig} from \"../App\";\nimport ls from \"local-storage\";\n\nconst allCells = {};\n\nconst Limit = 16;\nconst CellSize = 16;\nconst CellSize2 = CellSize * CellSize;\nconst NumLevels = 3;\nconst MaxNumberLevels = 5;\nconst MaxSize = Math.pow(CellSize, MaxNumberLevels);\nexport const StartOffsetX = MaxSize / 2;\nexport const StartOffsetY = MaxSize / 2;\n\nconst RootCellId = {\n  level: NumLevels,\n  x: StartOffsetX / Math.pow(CellSize, NumLevels + 1),\n  y: StartOffsetY / Math.pow(CellSize, NumLevels + 1),\n};\n\nconst MinBalance = Big(10).pow(23);\nconst DrawGas = Big(100).mul(Big(10).pow(12)).toFixed(0);\nconst UnclaimedDefaultColor = 0x333333;\n\nconst intToColor = (c) => `#${(c & 0xffffff).toString(16).padStart(6, \"0\")}`;\nconst colorToInt = (c) => parseInt(c.substring(1), 16);\nconst s = (c) => JSON.stringify(c);\nconst p = (c) => JSON.parse(c);\nconst p2c = (p) => ({\n  x: Math.trunc(p.x / CellSize),\n  y: Math.trunc(p.y / CellSize),\n  level: 0,\n});\n\nconst BatchOfPixels = 100;\nconst BatchTimeout = 250;\n\nconst cellKey = (cellIdStr) => `${NearConfig.contractName}:v01:-cell-${cellIdStr}`;\n\nexport class Board {\n  constructor(contract, ctx, redraw) {\n    this.contract = contract;\n    this.setState = contract.setState;\n    this.refreshAllowance = contract.refreshAllowance;\n    this.state = contract.state;\n\n    this.ctx = ctx;\n    this.redraw = redraw;\n    this.pixelQueue = [];\n    this.pendingPixels = [];\n    this.pending = {};\n    this.sendQueueTimer = null;\n    this.numFailedTxs = 0;\n\n    this.needRedraw = false;\n\n    this.renderLocal();\n  }\n\n  async fetchCells(cellIds) {\n    const cells = await this.contract.get_cells_json({cell_ids: cellIds});\n    return cellIds.reduce((acc, cellId, i) => {\n      acc[s(cellId)] = cells[i];\n      return acc;\n    }, {})\n  }\n\n  getCell(cellId) {\n    const cellIdStr = s(cellId);\n    if (cellIdStr in allCells) {\n      return allCells[cellIdStr]\n    } else {\n      return allCells[cellIdStr] = ls.get(cellKey(cellIdStr)) || {\n        nonce: 0,\n        colors: new Array(CellSize2).fill(0),\n      }\n    }\n  }\n\n  setCell(cellId, cell) {\n    const cellIdStr = s(cellId);\n    allCells[cellIdStr] = cell;\n    ls.set(cellKey(cellIdStr), cell)\n  }\n\n  internalPaint(cellId, color) {\n    if (!(s(cellId) in allCells)) {\n      const w = Math.pow(CellSize, cellId.level + 1);\n      const x = cellId.x * w - StartOffsetX;\n      const y = cellId.y * w - StartOffsetY;\n      this.ctx.fillStyle = intToColor(color || UnclaimedDefaultColor);\n      this.ctx.fillRect(x, y, w, w);\n      this.needRedraw = true;\n    }\n  }\n\n  internalRender(cellId, cell) {\n    const imageData = this.ctx.createImageData(CellSize, CellSize);\n    const data = imageData.data;\n    let off = 0;\n    for (let i = 0; i < CellSize; ++i) {\n      for (let j = 0; j < CellSize; ++j) {\n        const index = i * CellSize + j;\n        const color = cell.colors[index];\n        data[off++] = (color >> 16) & 0xff;\n        data[off++] = (color >> 8) & 0xff;\n        data[off++] = color & 0xff;\n        data[off++] = 255;\n      }\n    }\n    const w = Math.pow(CellSize, cellId.level + 1);\n    const x = cellId.x * w - StartOffsetX;\n    const y = cellId.y * w - StartOffsetY;\n    this.ctx.putImageData(imageData, x, y);\n    this.needRedraw = true;\n  }\n\n  internalRedraw() {\n    if (this.needRedraw) {\n      this.needRedraw = false;\n      this.redraw();\n    }\n  }\n\n  renderLocal() {\n    const q = [RootCellId];\n    while (q.length > 0) {\n      const cellId = q.splice(0, 1)[0];\n      const cell = this.getCell(cellId);\n      if (cell.nonce > 0) {\n        if (cellId.level === 0) {\n          this.internalRender(cellId, cell);\n        } else {\n          for (let i = 0; i < CellSize; ++i) {\n            for (let j = 0; j < CellSize; ++j) {\n              const index = i * CellSize + j;\n              const newCellId = {\n                level: cellId.level - 1,\n                x: cellId.x * CellSize + j,\n                y: cellId.y * CellSize + i,\n              };\n              this.internalPaint(newCellId, cell.colors[index]);\n              if (cell.colors[index]) {\n                q.push(newCellId);\n              }\n            }\n          }\n        }\n      }\n    }\n    this.internalRedraw();\n  }\n\n  async refreshAccountBalance() {\n    const balance = Big(await this.contract.get_storage_balance({\n      account_id: this.contract.account.accountId\n    }) || \"0\");\n    this.setState({\n      accountBalance: balance,\n    });\n    return balance;\n  }\n\n  async sendQueue() {\n    this.pixelQueue.sort((a, b) => s(p2c(a)).localeCompare(s(p2c(b))))\n    const pixels = this.pixelQueue.splice(0, BatchOfPixels);\n    this.pendingPixels = pixels;\n\n    const balance = await this.refreshAccountBalance();\n\n    try {\n      await this.contract.draw_json({\n        pixels\n      }, DrawGas, balance.lt(MinBalance) ? \"1000000000000000000000000\" : \"0\");\n      this.numFailedTxs = 0;\n    } catch (error) {\n      const msg = error.toString();\n      if (msg.indexOf(\"does not have enough balance\") !== -1) {\n        await this.refreshAllowance();\n        return;\n      }\n      console.log(\"Failed to send a transaction\", error);\n      this.numFailedTxs += 1;\n      if (this.numFailedTxs < 3) {\n        this.pixelQueue = this.pixelQueue.concat(this.pendingPixels);\n        this.pendingPixels = [];\n      } else {\n        this.pendingPixels = [];\n        this.pixelQueue = [];\n      }\n    }\n    try {\n      await this.refreshAccountBalance();\n    } catch (e) {\n      // ignore\n    }\n    this.pendingPixels.forEach((p) => delete this.pending[s(p)]);\n    this.pendingPixels = [];\n  }\n\n  async pingQueue(ready) {\n    if (this.sendQueueTimer) {\n      clearTimeout(this.sendQueueTimer);\n      this.sendQueueTimer = null;\n    }\n\n    if (\n      this.pendingPixels.length === 0 &&\n      (this.pixelQueue.length >= BatchOfPixels || ready)\n    ) {\n      await this.sendQueue();\n    }\n    if (this.pixelQueue.length > 0) {\n      this.sendQueueTimer = setTimeout(async () => {\n        await this.pingQueue(true);\n      }, BatchTimeout);\n    }\n  }\n\n  modifyPixel(p) {\n    const cellId = p2c(p);\n    const cell = this.getCell(cellId);\n    const index = (p.y - cellId.y * CellSize) * CellSize + p.x - cellId.x * CellSize;\n    cell.colors[index] = p.c;\n\n    const x = p.x - StartOffsetX;\n    const y = p.y - StartOffsetY;\n    this.ctx.fillStyle = intToColor(p.c);\n    this.ctx.fillRect(x, y, 1, 1);\n    this.needRedraw = true;\n    setTimeout(() => {\n      this.internalRedraw();\n    }, 100)\n  }\n\n  draw(ab) {\n    const c = colorToInt(this.state.color);\n    const p = {\n      x: StartOffsetX + ab.a,\n      y: StartOffsetY + ab.b,\n      c,\n    };\n    const sp = s(p);\n    if (!(sp in this.pending)) {\n      this.pending[sp] = true;\n      this.pixelQueue.push(p);\n\n      this.modifyPixel(p);\n    }\n\n    this.pingQueue(false);\n  }\n\n  async refreshCells() {\n    const q = [RootCellId];\n    while (q.length > 0) {\n      const cellIds = q.splice(0, Limit);\n      const newCells = await this.fetchCells(cellIds);\n      Object.entries(newCells).forEach(([cellId, cell]) => {\n        if (cell) {\n          cellId = p(cellId);\n          if (cellId.level === 0) {\n            this.internalRender(cellId, cell);\n          } else {\n            let oldCell = this.getCell(cellId);\n            if (cell.nonce !== oldCell.nonce) {\n              for (let i = 0; i < CellSize; ++i) {\n                for (let j = 0; j < CellSize; ++j) {\n                  const index = i * CellSize + j;\n                  const newCellId = {\n                    level: cellId.level - 1,\n                    x: cellId.x * CellSize + j,\n                    y: cellId.y * CellSize + i,\n                  };\n                  this.internalPaint(newCellId, cell.colors[index]);\n                  if (cell.colors[index] !== oldCell.colors[index]) {\n                    q.push(newCellId);\n                  }\n                }\n              }\n            }\n          }\n          this.setCell(cellId, cell);\n        }\n      });\n      this.internalRedraw();\n    }\n  }\n};\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as twgl from 'twgl-base.js';\nimport vs from '../shaders/vs';\nimport fs from '../shaders/fs';\nimport {Board} from \"../components/Board\";\n\n\nconst Sq3 = Math.sqrt(3.0) / 2;\nconst DxA = Sq3 * 2;\nconst DyA = 0;\nconst DxB = Sq3;\nconst DyB = 1.5;\n\nconst InitialZoom = 1;\nconst MinZoom = 1 / 4;\nconst MaxZoom = 16;\n\nconst TexSize = 2048;\n\nlet lastMousePos = null;\nlet isDrawMode = false;\nlet view = {\n  a: 0,\n  b: 0,\n  zoom: InitialZoom,\n  aspect: 1,\n};\n\n\nfunction setupRender(berryclub, gl) {\n  const programInfo = twgl.createProgramInfo(gl, [vs, fs])\n\n  const arrays = {\n    a_position: [\n      -Sq3 - Sq3/2, 0.75, 0,\n      Sq3 - Sq3/2, 0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n\n      Sq3 - Sq3/2, 0.75, 0,\n      Sq3 * 2 - Sq3/2, -0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n    ],\n    a_texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n\n      1, 0,\n      1, 1,\n      0, 1,\n    ],\n    a_ab: {\n      numComponents: 2, data: [\n        -0.5, -0.5,\n        TexSize - 0.5, -0.5,\n        -0.5, TexSize - 0.5,\n\n        TexSize - 0.5, -0.5,\n        TexSize - 0.5, TexSize - 0.5,\n        -0.5, TexSize - 0.5,\n      ]\n    }\n  };\n  const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n\n  const canvas = document.createElement('canvas');\n  canvas.width = TexSize;\n  canvas.height = TexSize;\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, TexSize, TexSize);\n  // ctx.fillStyle = '#222222';\n  // ctx.fillRect(0, 0, TexSize, TexSize);\n\n  const textures = twgl.createTextures(gl, {\n    fromCanvas: { src: canvas, mag: gl.NEAREST, min: gl.NEAREST, wrap: gl.CLAMP_TO_EDGE },\n  });\n\n  const board = new Board(berryclub, ctx, () => {\n    ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.fillRect(0, 0, 1, 1);\n    twgl.setTextureFromElement(gl, textures.fromCanvas, canvas);\n  });\n\n  board.refreshCells();\n  setInterval(() => {\n    board.refreshCells();\n  }, 5000);\n\n  function render(time) {\n    twgl.resizeCanvasToDisplaySize(gl.canvas);\n    twgl.bindFramebufferInfo(gl, null);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    const uniforms = {\n      resolution: [gl.canvas.width, gl.canvas.height],\n      texSize: [TexSize - 1, TexSize - 1],\n      pos: [view.a, view.b, view.zoom],\n      u_diffuse: textures.fromCanvas,\n    };\n    gl.useProgram(programInfo.program);\n    twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    twgl.setUniforms(programInfo, uniforms);\n    twgl.drawBufferInfo(gl, bufferInfo);\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n\n  return board;\n}\n\nfunction mouseToAb(e) {\n  const x = e.clientX;\n  const y = e.clientY;\n  const rect = e.target.getBoundingClientRect();\n  const dx = ((x - rect.x) / rect.width - 0.5);\n  const dy = ((y - rect.y) / rect.width - rect.height / rect.width * 0.5);\n  return dxdyToAb(dx, dy);\n}\n\nfunction dxdyToAb(dx, dy) {\n  const b = dy / DyB;\n  const a = (dx - b * DxB) / DxA;\n  return {\n    a, b,\n  }\n}\n\nfunction GlPage(props) {\n  const canvasEl = useRef(null);\n  const berryclub = props._near.contract;\n  const [board, setBoard] = useState(null);\n\n  if (berryclub) {\n    berryclub.setState = props.setState;\n    berryclub.refreshAllowance = props.refreshAllowance\n    if (board) {\n      board.state = props.state;\n    }\n  }\n\n  const propsDraw = props.state.draw;\n  useEffect(() => {\n    isDrawMode = propsDraw;\n  }, [propsDraw]);\n\n  useEffect(() => {\n    if (canvasEl.current && berryclub) {\n      console.log(\"Setup\");\n      const ctx = canvasEl.current.getContext('webgl');\n\n      const drawNow = (ab) => {\n        let a = (view.a + ab.a / view.zoom + 0.5) * TexSize - 0.5;\n        let b = (view.b + ab.b / view.zoom + 0.5) * TexSize - 0.5;\n\n        function dist(na, nb) {\n          const cy = ((nb - b) * DyB + (na - a) * DyA);\n          const cx = ((nb - b) * DxB + (na - a) * DxA);\n          return cx * cx + cy * cy;\n        }\n\n        const ta = Math.trunc(a);\n        const tb = Math.trunc(b);\n        let best = null;\n        let minD = 10;\n\n        for (let i = -1; i < 2 ; ++i) {\n          for (let j = -1; j < 2; ++j) {\n            const a = ta + i;\n            const b = tb + j;\n            const d = dist(a, b);\n            if (d < minD + 1e-9) {\n              best = {a, b};\n              minD = d;\n            }\n          }\n        }\n        board.draw(best);\n      }\n\n      const board = setupRender(berryclub, ctx);\n      setBoard(board);\n      canvasEl.current.addEventListener('mousemove', (e) => {\n        const ab = mouseToAb(e);\n        if ((e.buttons & 1) && isDrawMode) {\n          drawNow(ab);\n        } else if (lastMousePos && !isDrawMode) {\n          const da = ab.a - lastMousePos.a;\n          const db = ab.b - lastMousePos.b;\n          view = {\n            a: view.a - da / view.zoom,\n            b: view.b - db / view.zoom,\n            zoom: view.zoom,\n            aspect: view.aspect,\n          };\n        }\n        if (e.buttons & 1) {\n          lastMousePos = ab;\n        } else {\n          lastMousePos = null;\n        }\n      });\n\n\n      canvasEl.current.addEventListener('mousedown', (e) => {\n        if ((e.buttons & 1) && isDrawMode) {\n          const ab = mouseToAb(e);\n          drawNow(ab);\n        }\n      });\n\n      canvasEl.current.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        const ab = mouseToAb(e);\n\n        const newZoom = Math.min(MaxZoom, Math.max(MinZoom, view.zoom * Math.exp(-e.deltaY * 0.001)));\n        const oa = view.a + ab.a / view.zoom;\n        const ob = view.b + ab.b / view.zoom;\n        const va = oa - ab.a / newZoom;\n        const vb = ob - ab.b / newZoom;\n\n        view = {\n          a: va,\n          b: vb,\n          zoom: newZoom,\n          aspect: view.aspect,\n        };\n\n      });\n\n      const resize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n\n        const pixelRatio = dpr / bsr;\n        const width  = window.innerWidth || document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height = window.innerHeight|| document.documentElement.clientHeight||\n          document.body.clientHeight;\n        canvasEl.current.width = width * pixelRatio;\n        canvasEl.current.height = height * pixelRatio;\n        // ctx.scale(canvasEl.current.width, canvasEl.current.width);\n        view = Object.assign({}, view, {aspect: height / width})\n      };\n\n      window.addEventListener('resize', resize);\n\n      resize();\n\n    }\n  }, [canvasEl, berryclub])\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        className=\"canvas\"\n        width={640}\n      />\n    </div>\n  );\n}\n\nexport default GlPage;\n","export default `\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec2 resolution;\nuniform vec3 pos;\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_ab;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nvoid main() {\n  gl_Position = vec4((a_position.xy - pos.xy * D) * vec2(2.0, 2.0 * resolution.x / resolution.y) * pos.z, a_position.zw);\n  v_texCoord = a_texcoord;\n  v_ab = a_ab;\n}\n`;\n","export default `\nprecision highp float;\n\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec3 color;\nuniform sampler2D u_diffuse;\nuniform vec2 texSize;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nfloat d(vec2 p) {\n  vec2 dx = (p - v_ab) * D;\n  return dot(dx, dx);\n}\n\nvec3 mind(vec3 a, vec2 b)\n{\n  float db = d(b); \n  return mix(vec3(b, db), a, step(a.z, db));\n}\n\nvoid main() {\n  vec2 fab = floor(v_ab);\n  vec3 best = vec3(fab, d(fab));\n  best = mind(best, fab + vec2(1.0, 0.0));\n  best = mind(best, fab + vec2(0.0, 1.0));\n  best = mind(best, fab + vec2(1.0, 1.0));\n  \n  vec4 diffuseColor = texture2D(u_diffuse, best.xy / texSize);\n  if (diffuseColor.w < 1.0) {\n    discard;\n  }\n  gl_FragColor = diffuseColor;\n}\n`;\n","import React from 'react';\nimport \"error-polyfill\";\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport * as nearAPI from 'near-api-js'\nimport ls from \"local-storage\";\nimport GlPage from \"./pages/GL\";\nimport Big from \"big.js\";\n\nconst IsMainnet = false; // window.location.hostname === \"berry.cards\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org', // https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1633114897352-65032726804099',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'dev-1633114897352-65032726804099',\n  walletUrl: 'https://wallet.near.org',\n};\n\nexport const NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {};\n\n    this.state = {\n      connected: false,\n      draw: false,\n      isNavCollapsed: true,\n      account: null,\n      accountBalance: Big(0),\n      color: `#${Math.trunc(Math.random() * 0xffffff).toString(16).padStart(6, \"0\")}`\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    // this._near.archivalConnection = nearAPI.Connection.fromConfig({\n    //   networkId: NearConfig.networkId,\n    //   provider: { type: 'JsonRpcProvider', args: { url: NearConfig.archivalNodeUrl } },\n    //   signer: { type: 'InMemorySigner', keyStore }\n    // });\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n\n\n    // this._near.berryclub = new nearAPI.Account(this._near.archivalConnection, 'berryclub.ek.near');\n    //\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_cells_json', 'get_storage_balance'],\n      changeMethods: ['draw_json'],\n    });\n\n    if (this._near.accountId) {\n      const balance = Big(await this._near.contract.get_storage_balance({\n        account_id: this._near.accountId\n      }) || \"0\");\n      this.setState({\n        accountBalance: balance,\n      })\n    }\n\n  }\n\n  async requestSignIn(e) {\n    e && e.preventDefault();\n    const appTitle = '';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  popRequest(c) {\n    const requests = this.state.requests.slice(1);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRequest(r, c) {\n    const requests = this.state.requests.slice(0);\n    requests.push(r);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRecentCard(cardId) {\n    let recentCards = this.state.recentCards.slice(0);\n    const index = recentCards.indexOf(cardId);\n    if (index !== -1) {\n      recentCards.splice(index, 1);\n    }\n    recentCards.unshift(cardId);\n    recentCards = recentCards.slice(0, 5);\n    ls.set(this._near.lsKeyRecentCards, recentCards);\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance() {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\");\n    await this.logOut();\n    await this.requestSignIn();\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      setState: (s, c) => this.setState(s, c),\n      refreshAllowance: () => this.refreshAllowance(),\n      state: this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button className=\"btn btn-primary me-2\" onClick={() => this.setState({ draw: !this.state.draw})}>{!this.state.draw ? \"Scroll mode\" : \"Draw mode\"}</button>\n        {this.state.draw && <>\n          Color:\n          <div className=\"d-inline-block align-middle\">\n            <input className=\"form-control ms-2 p-0\" type=\"color\" id=\"color\" name=\"color\" style={{minWidth: \"5em\"}}\n                   value={this.state.color} onChange={(e) => this.setState({\n              color: e.target.value\n            })} />\n          </div>\n        </>}\n\n        <div style={{float: \"right\"}}>\n          <label>\n            Account Balance: {this.state.accountBalance.div(Big(10).pow(24)).toFixed(3)} NEAR\n          </label>\n          <button\n            className=\"btn btn-outline-secondary ms-2\"\n            onClick={() => this.logOut()}>Sign out ({this.state.signedAccountId})</button>\n        </div>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Sign in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        {header}\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/hexland\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n        <GlPage {...passProps}/>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}