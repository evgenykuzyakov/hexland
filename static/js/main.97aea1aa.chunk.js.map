{"version":3,"sources":["components/Board.js","pages/GL.js","shaders/vs.js","shaders/fs.js","App.js","index.js"],"names":["allCells","MaxSize","Math","pow","StartOffsetX","StartOffsetY","RootCellId","level","x","NumLevels","y","s","c","JSON","stringify","Board","contract","ctx","redraw","this","needRedraw","cellIds","a","get_cells_json","cell_ids","cells","reduce","acc","cellId","i","cellIdStr","nonce","colors","Array","CellSize","fill","cell","color","w","fillStyle","toString","padStart","fillRect","imageData","createImageData","data","off","j","index","putImageData","q","length","splice","fetchCells","newCells","Object","entries","forEach","parse","console","log","internalRender","oldCell","getCell","newCellId","internalPaint","push","setCell","internalRedraw","Sq3","sqrt","DxA","DxB","lastMousePos","isDrawMode","globalView","b","zoom","aspect","state","pos","dxdyToAb","dx","dy","GlPage","props","canvasEl","useRef","useState","setCtx","view","setView","mouseAb","setMouseAb","refresh","useCallback","height","db","da","assign","useEffect","berryclub","_near","propsDraw","draw","current","getContext","gl","programInfo","twgl","arrays","a_position","a_texcoord","a_ab","numComponents","TexSize","bufferInfo","canvas","document","createElement","width","clearRect","textures","fromCanvas","src","mag","NEAREST","min","wrap","CLAMP_TO_EDGE","board","refreshCells","setInterval","requestAnimationFrame","render","time","viewport","uniforms","resolution","texSize","u_diffuse","useProgram","program","setupRender","addEventListener","e","clientX","clientY","rect","target","getBoundingClientRect","buttons","drawNow","ab","dist","na","nb","cy","cx","ta","trunc","tb","best","minD","d","get_storage_balance","account_id","account","accountId","balance","draw_json","pixels","preventDefault","mb","ma","newZoom","max","exp","deltaY","oa","ob","resize","pixelRatio","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","v","ref","className","NearConfig","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","App","lsKey","lsKeyRecentCards","connected","isNavCollapsed","requests","recentCards","ls","get","_initNear","then","setState","signedIn","signedAccountId","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","archivalConnection","fromConfig","provider","type","args","url","signer","walletConnection","getAccountId","viewMethods","changeMethods","requestSignIn","signOut","_accountId","slice","r","cardId","indexOf","unshift","set","alert","logOut","passProps","updateState","popRequest","addRequest","addRecentCard","refreshAllowance","header","onClick","style","float","role","aria-hidden","href","data-ribbon","title","React","Component","ReactDOM","getElementById"],"mappings":"oZAAMA,EAAW,GAOXC,EAAUC,KAAKC,IAJJ,GAGO,GAEXC,EAAeH,EAAU,EACzBI,EAAeJ,EAAU,EAEhCK,EAAa,CACjBC,MAPgB,EAQhBC,EAAGJ,EAAeF,KAAKC,IAVR,GAUsBM,GACrCC,EAAGL,EAAeH,KAAKC,IAXR,GAWsBM,IAIjCE,EAAI,SAACC,GAAD,OAAOC,KAAKC,UAAUF,IAGnBG,EAAb,WACE,WAAYC,EAAUC,EAAKC,GAAS,oBAClCC,KAAKH,SAAWA,EAChBG,KAAKF,IAAMA,EACXE,KAAKD,OAASA,EAEdC,KAAKC,YAAa,EANtB,qFASE,WAAiBC,GAAjB,eAAAC,EAAA,sEACsBH,KAAKH,SAASO,eAAe,CAACC,SAAUH,IAD9D,cACQI,EADR,yBAESJ,EAAQK,QAAO,SAACC,EAAKC,EAAQC,GAElC,OADAF,EAAIhB,EAAEiB,IAAWH,EAAMI,GAChBF,IACN,KALL,gDATF,4EAiBE,SAAQC,GACN,IAAME,EAAYnB,EAAEiB,GACpB,OAAIE,KAAa9B,EACRA,EAAS8B,GAET,CACLC,MAAO,EACPC,OAAQ,IAAIC,MAzCFC,KAyCmBC,KAAK,MAxB1C,qBA6BE,SAAQP,EAAQQ,GACdpC,EAASW,EAAEiB,IAAWQ,IA9B1B,2BAiCE,SAAcR,EAAQS,GACpB,KAAM1B,EAAEiB,KAAW5B,GAAW,CAC5B,IAAMsC,EAAIpC,KAAKC,IArDJ,GAqDkByB,EAAOrB,MAAQ,GACtCC,EAAIoB,EAAOpB,EAAI8B,EAAIlC,EACnBM,EAAIkB,EAAOlB,EAAI4B,EAAIjC,EACzBc,KAAKF,IAAIsB,UA1CI,YAAgB,SA0CGF,GA1COG,SAAS,IAAIC,SAAS,EAAG,MA2ChEtB,KAAKF,IAAIyB,SAASlC,EAAGE,EAAG4B,EAAGA,GAC3BnB,KAAKC,YAAa,KAxCxB,4BA4CE,SAAeQ,EAAQQ,GAIrB,IAHA,IAAMO,EAAYxB,KAAKF,IAAI2B,gBA/Dd,OAgEPC,EAAOF,EAAUE,KACnBC,EAAM,EACDjB,EAAI,EAAGA,EAlEH,KAkEmBA,EAC9B,IAAK,IAAIkB,EAAI,EAAGA,EAnEL,KAmEqBA,EAAG,CACjC,IAAMC,EApEG,GAoEKnB,EAAekB,EACvBV,EAAQD,EAAKJ,OAAOgB,GAC1BH,EAAKC,KAAUT,GAAS,GAAM,IAC9BQ,EAAKC,KAAUT,GAAS,EAAK,IAC7BQ,EAAKC,KAAiB,IAART,EACdQ,EAAKC,KAAS,IAGlB,IAAMR,EAAIpC,KAAKC,IA5EF,GA4EgByB,EAAOrB,MAAQ,GACtCC,EAAIoB,EAAOpB,EAAI8B,EAAIlC,EACnBM,EAAIkB,EAAOlB,EAAI4B,EAAIjC,EACzBc,KAAKF,IAAIgC,aAAaN,EAAWnC,EAAGE,GACpCS,KAAKC,YAAa,IA9DtB,4BAiEE,WACMD,KAAKC,aACPD,KAAKC,YAAa,EAClBD,KAAKD,YApEX,iEAwEE,uCAAAI,EAAA,sDACQ4B,EAAI,CAAC5C,GADb,YAES4C,EAAEC,OAAS,GAFpB,wBAGU9B,EAAU6B,EAAEE,OAAO,EA9FjB,IA2FZ,SAI2BjC,KAAKkC,WAAWhC,GAJ3C,OAIUiC,EAJV,OAMIC,OAAOC,QAAQF,GAAUG,SAAQ,YAAqB,IAhFjD7C,EAgFgD,mBAAlBgB,EAAkB,KAAVQ,EAAU,KACnD,GAAIA,EAAM,CAGR,GApFCxB,EAkFUgB,EAAXA,EAlFOf,KAAK6C,MAAM9C,GAmFlB+C,QAAQC,IAAIhC,EAAQQ,GACC,IAAjBR,EAAOrB,MACT,EAAKsD,eAAejC,EAAQQ,OACvB,CACL,IAAI0B,EAAU,EAAKC,QAAQnC,GAC3B,GAAIQ,EAAKL,QAAU+B,EAAQ/B,MACzB,IAAK,IAAIF,EAAI,EAAGA,EAzGb,KAyG6BA,EAC9B,IAAK,IAAIkB,EAAI,EAAGA,EA1Gf,KA0G+BA,EAAG,CACjC,IAAMC,EA3GP,GA2GenB,EAAekB,EAC7B,GAAIX,EAAKJ,OAAOgB,KAAWc,EAAQ9B,OAAOgB,GAAQ,CAChD,IAAMgB,EAAY,CAChBzD,MAAOqB,EAAOrB,MAAQ,EACtBC,EA/GL,GA+GQoB,EAAOpB,EAAeuC,EACzBrC,EAhHL,GAgHQkB,EAAOlB,EAAemB,GAE3B,EAAKoC,cAAcD,EAAW5B,EAAKJ,OAAOgB,IAC1CE,EAAEgB,KAAKF,KAMjB,EAAKG,QAAQvC,EAAQQ,OAGzBjB,KAAKiD,iBAlCT,gEAxEF,6DCdMC,EAAMnE,KAAKoE,KAAK,GAAO,EACvBC,EAAY,EAANF,EAENG,EAAMH,EAQRI,EAAe,KACfC,GAAa,EACbC,EAAa,CACfrD,EAAG,EACHsD,EAAG,EACHC,KAVkB,EAWlBC,OAAQ,GAIJC,EAAQ,CACZC,IAAK,CAAC,EAAG,EAAG,IAmFd,SAASC,EAASC,EAAIC,GACpB,IAAMP,EAAIO,EAtGA,IAwGV,MAAO,CACL7D,GAFS4D,EAAKN,EAAIJ,GAAOD,EAEtBK,KAuOQQ,MAnOf,SAAgBC,GACd,IAAMC,EAAWC,iBAAO,MADH,EAECC,mBAAS,MAFV,mBAEdvE,EAFc,KAETwE,EAFS,OAGGD,mBAASb,GAHZ,mBAGde,EAHc,KAGRC,EAHQ,OAISH,mBAAS,CAAClE,EAAG,EAAGsD,EAAG,IAJ5B,mBAIdgB,EAJc,KAILC,EAJK,KAMfC,EAAUC,uBAAY,WAC1B,IACIC,EAASN,EAAKZ,OACZD,EAAOa,EAAKb,KAIZoB,EAAKD,EAASnB,EA1HZ,IA0HyB,EAC3BqB,GAPM,EAOQrB,EAAO,EAAIoB,EAAKzB,GAAOD,EAEhCmB,EAAKpE,EACLoE,EAAKd,EAEhBrB,OAAO4C,OAAOpB,EAAO,CACnBC,IAAK,CAACU,EAAKpE,EAAGoE,EAAKd,EAAGC,OA6CvB,CAAC5D,EAAKyE,EAAME,IAEfQ,qBAAU,WACJnF,GACF6E,MAED,CAACF,EAASF,EAAMzE,EAAK6E,IAExB,IAAMO,EAAYhB,EAAMiB,MAAMtF,SAExBuF,EAAYlB,EAAMmB,KA6IxB,OA5IAJ,qBAAU,WACR1B,EAAa6B,IACZ,CAACA,IAEJH,qBAAU,WACR,GAAId,EAASmB,SAAWJ,EAAW,CACjC1C,QAAQC,IAAI,SACZ,IAAM3C,EAAMqE,EAASmB,QAAQC,WAAW,SACxCjB,EAAOxE,GA5Kb,SAAqBoF,EAAWM,GAC9B,IAAMC,EAAcC,oBAAuBF,EAAI,CCjCnC,ocCAA,+wBFmCNG,EAAS,CACbC,WAAY,EACT1C,EAAMA,EAAI,EAAG,IAAM,EACpBA,EAAMA,EAAI,EAAG,IAAM,EACnB,EAAIA,EAAI,GAAI,IAAM,EAElBA,EAAMA,EAAI,EAAG,IAAM,EACb,EAANA,EAAUA,EAAI,GAAI,IAAM,EACxB,EAAIA,EAAI,GAAI,IAAM,GAEpB2C,WAAY,CACV,EAAG,EACH,EAAG,EACH,EAAG,EAEH,EAAG,EACH,EAAG,EACH,EAAG,GAELC,KAAM,CACJC,cAAe,EAAGrE,KAAM,EACrB,IAAM,GACPsE,QAAgB,IACf,GAAKA,OAENA,QAAgB,GAChBA,OAAeA,QACd,GAAKA,UAINC,EAAaP,6BAAgCF,EAAIG,GAEjDO,EAASC,SAASC,cAAc,UACtCF,EAAOG,MArDO,KAsDdH,EAAOrB,OAtDO,KAuDd,IAAM/E,EAAMoG,EAAOX,WAAW,MAC9BzF,EAAIwG,UAAU,EAAG,EAxDH,WA4Dd,IAAMC,EAAWb,iBAAoBF,EAAI,CACvCgB,WAAY,CAAEC,IAAKP,EAAQQ,IAAKlB,EAAGmB,QAASC,IAAKpB,EAAGmB,QAASE,KAAMrB,EAAGsB,iBAGlEC,EAAQ,IAAInH,EAAMsF,EAAWpF,GAAK,WACtCA,EAAIsB,UAAY,mBAChBtB,EAAIyB,SAAS,EAAG,EAAG,EAAG,GACtBmE,wBAA2BF,EAAIe,EAASC,WAAYN,MAGtDa,EAAMC,eACYC,aAAY,WAC5BF,EAAMC,iBACL,KAoBHE,uBAlBA,SAASC,EAAOC,GACd1B,4BAA+BF,EAAGU,QAClCR,sBAAyBF,EAAI,MAC7BA,EAAG6B,SAAS,EAAG,EAAG7B,EAAGU,OAAOG,MAAOb,EAAGU,OAAOrB,QAE7C,IAAMyC,EAAW,CACfC,WAAY,CAAC/B,EAAGU,OAAOG,MAAOb,EAAGU,OAAOrB,QACxC2C,QAAS,CAACxB,KAAaA,MACvBnC,IAAKD,EAAMC,IACX4D,UAAWlB,EAASC,YAEtBhB,EAAGkC,WAAWjC,EAAYkC,SAC1BjC,0BAA6BF,EAAIC,EAAaQ,GAC9CP,cAAiBD,EAAa6B,GAC9B5B,iBAAoBF,EAAIS,GAExBiB,sBAAsBC,MAmGpBS,CAAY1C,EAAWpF,GACvBqE,EAASmB,QAAQuC,iBAAiB,aAAa,SAACC,GAC9C,IAAMzI,EAAIyI,EAAEC,QACNxI,EAAIuI,EAAEE,QACNC,EAAOH,EAAEI,OAAOC,wBAChBpE,GAAO1E,EAAI4I,EAAK5I,GAAK4I,EAAK5B,MAAQ,GAClCrC,GAAOzE,EAAI0I,EAAK1I,GAAK0I,EAAK5B,MAAQ4B,EAAKpD,OAASoD,EAAK5B,MAAQ,GAEnE,GADA3B,EAAWZ,EAASC,EAAIC,IACpBV,IAAiBC,EAAY,CAC/B,IAD+B,EAGhBO,GAFHzE,EAAIiE,EAAajE,GAAK4I,EAAK5B,OAC3B9G,EAAI+D,EAAa/D,GAAK0I,EAAK5B,OAChClG,EAHwB,EAGxBA,EAAGsD,EAHqB,EAGrBA,EACVe,GAAQ,SAACD,GACP,OAAOf,EAAa,CAClBrD,EAAGoE,EAAKpE,EAAIA,EAAIoE,EAAKb,KACrBD,EAAGc,EAAKd,EAAIA,EAAIc,EAAKb,KACrBA,KAAMa,EAAKb,KACXC,OAAQY,EAAKZ,WAKjBL,EADc,EAAZwE,EAAEM,QACW,CAAC/I,IAAGE,KAEJ,QAInB,IAAM8I,EAAO,uCAAG,WAAOC,GAAP,MAAAnI,EAAA,EAKLoI,EALK,6BAAApI,EAAA,sDAgBd,IAXSoI,EALK,SAKAC,EAAIC,GAChB,IAAMC,EArOJ,KAqOWD,EAAKhF,GAvOhB,GAuO4B+E,EAAKrI,GAC7BwI,GAAOF,EAAKhF,GAAKJ,GAAOmF,EAAKrI,GAAKiD,EACxC,OAAOuF,EAAKA,EAAKD,EAAKA,GANpBvI,EA5NI,OA2NFoE,EAAOf,GACCrD,EAAImI,EAAGnI,EAAIoE,EAAKb,KAAO,IAAiB,GAClDD,EA7NI,MA6NCc,EAAKd,EAAI6E,EAAG7E,EAAIc,EAAKb,KAAO,IAAiB,GAQhDkF,EAAK7J,KAAK8J,MAAM1I,GAChB2I,EAAK/J,KAAK8J,MAAMpF,GAClBsF,EAAO,KACPC,EAAO,GAEFtI,GAAK,EAAGA,EAAI,IAAMA,EACzB,IAASkB,GAAK,EAAGA,EAAI,IAAKA,GAGlBqH,EAAIV,EAFJpI,EAAIyI,EAAKlI,EACT+C,EAAIqF,EAAKlH,IAEPoH,EAAO,OACbD,EAAO,CAAC5I,IAAGsD,KACXuF,EAAOC,GAvBC,OA2BdzG,QAAQC,IAAIsG,GA3BE,UA6BS7D,EAAUgE,oBAAoB,CACnDC,WAAYjE,EAAUkE,QAAQC,YA9BlB,kDA+BP,IA/BO,eA6BRC,EA7BQ,eAiCRpE,EAAUqE,UAAU,CACxBC,OAAQ,CAAC,CACPnK,EAAGJ,EAAe8J,EAAK5I,EACvBZ,EAAGL,EAAe6J,EAAKtF,EACvBhE,EAAG,YAEJ,iBAAkB6J,EAAQtH,QAAU,GAAK,4BAA8B,KAvC5D,4CAAH,sDA0CbmC,EAASmB,QAAQuC,iBAAiB,aAAa,SAACC,GAC9C,GAAiB,EAAZA,EAAEM,SAAgB7E,EAAY,CACjC,IAAMlE,EAAIyI,EAAEC,QACNxI,EAAIuI,EAAEE,QACNC,EAAOH,EAAEI,OAAOC,wBAChBpE,GAAO1E,EAAI4I,EAAK5I,GAAK4I,EAAK5B,MAAQ,GAClCrC,GAAOzE,EAAI0I,EAAK1I,GAAK0I,EAAK5B,MAAQ4B,EAAKpD,OAASoD,EAAK5B,MAAQ,GACnEgC,EAAQvE,EAASC,EAAIC,QAIzBG,EAASmB,QAAQuC,iBAAiB,SAAS,SAACC,GAC1CA,EAAE2B,iBACF,IAAMxB,EAAOH,EAAEI,OAAOC,wBAChBpE,GAAO+D,EAAEC,QAAUE,EAAK5I,GAAK4I,EAAK5B,MAAQ,GAE1CqD,IADO5B,EAAEE,QAAUC,EAAK1I,GAAK0I,EAAK5B,MAAQ4B,EAAKpD,OAASoD,EAAK5B,MAAQ,IAxRvE,IA0REsD,GAAM5F,EAAK2F,EAAKrG,GAAOD,EAC7BoB,GAAQ,SAACD,GACP,IAAMqF,EAAU7K,KAAK8K,IAzRf,EAAI,GAyRwBtF,EAAKb,KAAO3E,KAAK+K,IAAgB,MAAXhC,EAAEiC,SACpDC,EAAKzF,EAAKpE,EAAIwJ,EAAKpF,EAAKb,KACxBuG,EAAK1F,EAAKd,EAAIiG,EAAKnF,EAAKb,KAI9B,OAAOF,EAAa,CAClBrD,EAJS6J,EAAKL,EAAKC,EAKnBnG,EAJSwG,EAAKP,EAAKE,EAKnBlG,KAAMkG,EACNjG,OAAQY,EAAKZ,cAKnB,IAAMuG,EAAS,WACb,IAOMC,GAPMC,OAAOC,kBAAoB,IAC3BvK,EAAIwK,8BACdxK,EAAIyK,2BACJzK,EAAI0K,0BACJ1K,EAAI2K,yBACJ3K,EAAI4K,wBAA0B,GAG1BrE,EAAS+D,OAAOO,YAAcxE,SAASyE,gBAAgBC,aAC3D1E,SAAS2E,KAAKD,YACVhG,EAASuF,OAAOW,aAAc5E,SAASyE,gBAAgBI,cAC3D7E,SAAS2E,KAAKE,aAChB7G,EAASmB,QAAQe,MAAQA,EAAQ8D,EACjChG,EAASmB,QAAQT,OAASA,EAASsF,EAEnC3F,GAAQ,SAACyG,GAAD,OAAO7I,OAAO4C,OAAO,GAAIiG,EAAG,CAACtH,OAAQkB,EAASwB,QAGxD+D,OAAOvC,iBAAiB,SAAUqC,GAElCA,OAGD,CAAC/F,EAAUe,IAGZ,6BACE,4BACEgG,IAAK/G,EACLgH,UAAU,SACV9E,MAAO,QG7TT+E,EAfiB,CACrBC,UAAW,UACXC,QAAS,+BACTC,gBAAiB,wCACjBC,aAAc,mCACdC,UAAW,mCAgKEC,E,kDAnJb,WAAYxH,GAAQ,IAAD,8BACjB,cAAMA,IAEDiB,MAAQ,GAEb,EAAKA,MAAMwG,MAAQP,EAAWI,aAAe,QAC7C,EAAKrG,MAAMyG,iBAAmB,EAAKzG,MAAMwG,MAAQ,cAEjD,EAAK/H,MAAQ,CACXiI,WAAW,EACXxG,MAAM,EACNyG,gBAAgB,EAChB1C,QAAS,KACT2C,SAAU,KACVC,YAAaC,IAAGC,IAAI,EAAK/G,MAAMyG,mBAAqB,IAGtD,EAAKO,YAAYC,MAAK,WACpB,EAAKC,SAAS,CACZC,WAAY,EAAKnH,MAAMkE,UACvBkD,gBAAiB,EAAKpH,MAAMkE,UAC5BwC,WAAW,OArBE,E,oFA2BnB,8BAAA1L,EAAA,6DACQqM,EAAW,IAAIC,YAAkBC,4BADzC,SAEqBD,UAAgBrK,OAAO4C,OAAO,CAAC2H,KAAM,CAACH,aAAYpB,IAFvE,OAEQwB,EAFR,OAGE5M,KAAKmF,MAAM0H,mBAAqBJ,aAAmBK,WAAW,CAC5DzB,UAAWD,EAAWC,UACtB0B,SAAU,CAAEC,KAAM,kBAAmBC,KAAM,CAAEC,IAAK9B,EAAWG,kBAC7D4B,OAAQ,CAAEH,KAAM,iBAAkBR,cAEpCxM,KAAKmF,MAAMqH,SAAWA,EACtBxM,KAAKmF,MAAMyH,KAAOA,EAElB5M,KAAKmF,MAAMiI,iBAAmB,IAAIX,mBAAyBG,EAAMxB,EAAWI,cAC5ExL,KAAKmF,MAAMkE,UAAYrJ,KAAKmF,MAAMiI,iBAAiBC,eAEnDrN,KAAKmF,MAAMiE,QAAUpJ,KAAKmF,MAAMiI,iBAAiBhE,UAGjDpJ,KAAKmF,MAAMD,UAAY,IAAIuH,UAAgBzM,KAAKmF,MAAM0H,mBAAoB,qBAE1E7M,KAAKmF,MAAMtF,SAAW,IAAI4M,WAAiBzM,KAAKmF,MAAMiE,QAASgC,EAAWI,aAAc,CACtF8B,YAAa,CAAC,iBAAkB,uBAChCC,cAAe,CAAC,eArBpB,iD,wHA0BA,WAAoBzF,GAApB,SAAA3H,EAAA,6DACE2H,GAAKA,EAAE2B,iBACU,GAFnB,SAGQzJ,KAAKmF,MAAMiI,iBAAiBI,cAChCpC,EAAWI,aAFI,IAFnB,iCAOS,GAPT,gD,kHAUA,sBAAArL,EAAA,sDACEH,KAAKmF,MAAMiI,iBAAiBK,UAC5BzN,KAAKmF,MAAMkE,UAAY,KACvBrJ,KAAKqM,SAAS,CACZC,WAAYtM,KAAK0N,WACjBnB,gBAAiBvM,KAAK0N,aAL1B,gD,8EASA,SAAWjO,GACT,IAAMsM,EAAW/L,KAAK4D,MAAMmI,SAAS4B,MAAM,GAC3C3N,KAAKqM,SAAS,CACZN,YACCtM,K,wBAGL,SAAWmO,EAAGnO,GACZ,IAAMsM,EAAW/L,KAAK4D,MAAMmI,SAAS4B,MAAM,GAC3C5B,EAAShJ,KAAK6K,GACd5N,KAAKqM,SAAS,CACZN,YACCtM,K,2BAGL,SAAcoO,GACZ,IAAI7B,EAAchM,KAAK4D,MAAMoI,YAAY2B,MAAM,GACzC9L,EAAQmK,EAAY8B,QAAQD,IACnB,IAAXhM,GACFmK,EAAY/J,OAAOJ,EAAO,GAE5BmK,EAAY+B,QAAQF,GACpB7B,EAAcA,EAAY2B,MAAM,EAAG,GACnC1B,IAAG+B,IAAIhO,KAAKmF,MAAMyG,iBAAkBI,GACpChM,KAAKqM,SAAS,CACZL,kB,qEAIJ,sBAAA7L,EAAA,6DACE8N,MAAM,wEADR,SAEQjO,KAAKkO,SAFb,uBAGQlO,KAAKwN,gBAHb,gD,0EAMA,WAAU,IAAD,OACDW,EAAS,aACbhJ,MAAOnF,KAAKmF,MACZiJ,YAAa,SAAC5O,EAAGC,GAAJ,OAAU,EAAK4M,SAAS7M,EAAGC,IACxC4O,WAAY,SAAC5O,GAAD,OAAO,EAAK4O,WAAW5O,IACnC6O,WAAY,SAACV,EAAGnO,GAAJ,OAAU,EAAK6O,WAAWV,EAAGnO,IACzC8O,cAAe,SAACV,GAAD,OAAY,EAAKU,cAAcV,IAC9CW,iBAAkB,kBAAM,EAAKA,qBAC1BxO,KAAK4D,OAEJ6K,EAAUzO,KAAK4D,MAAMiI,UAEtB7L,KAAK4D,MAAM0I,SACd,6BACE,4BAAQoC,QAAS,kBAAM,EAAKrC,SAAS,CAAEhH,MAAO,EAAKzB,MAAMyB,SAAUrF,KAAK4D,MAAMyB,KAAuB,YAAhB,eAErF,4BACE8F,UAAU,4BAA4BwD,MAAO,CAACC,MAAO,SACrDF,QAAS,kBAAM,EAAKR,WAFtB,aAE2ClO,KAAK4D,MAAM2I,gBAFtD,MAKF,6BACE,4BACEpB,UAAU,kBACVuD,QAAS,SAAC5G,GAAD,OAAO,EAAK0F,cAAc1F,KAFrC,6BAXF,8CAAmB,0BAAMqD,UAAU,+BAA+B0D,KAAK,SAASC,cAAY,UAiB9F,OACE,yBAAK3D,UAAU,OACZsD,EACD,uBAAGtD,UAAU,wCAAwC4D,KAAK,4CAA4CC,cAAY,oBAC/GC,MAAM,qBADT,qBAGA,kBAAC,EAAWd,Q,GA9IFe,IAAMC,WCrBxBC,IAASjI,OAAO,kBAAC,EAAD,MAAShB,SAASkJ,eAAe,U","file":"static/js/main.97aea1aa.chunk.js","sourcesContent":["const allCells = {};\n\nconst Limit = 16;\nconst CellSize = 16;\nconst CellSize2 = CellSize * CellSize;\nconst NumLevels = 3;\nconst MaxNumberLevels = 5;\nconst MaxSize = Math.pow(CellSize, MaxNumberLevels);\nexport const StartOffsetX = MaxSize / 2;\nexport const StartOffsetY = MaxSize / 2;\n\nconst RootCellId = {\n  level: NumLevels,\n  x: StartOffsetX / Math.pow(CellSize, NumLevels + 1),\n  y: StartOffsetY / Math.pow(CellSize, NumLevels + 1),\n};\n\nconst intToColor = (c) => `#${(c & 0xffffff).toString(16).padStart(6, \"0\")}`;\nconst s = (c) => JSON.stringify(c);\nconst p = (c) => JSON.parse(c);\n\nexport class Board {\n  constructor(contract, ctx, redraw) {\n    this.contract = contract;\n    this.ctx = ctx;\n    this.redraw = redraw;\n\n    this.needRedraw = false;\n  }\n\n  async fetchCells(cellIds) {\n    const cells = await this.contract.get_cells_json({cell_ids: cellIds});\n    return cellIds.reduce((acc, cellId, i) => {\n      acc[s(cellId)] = cells[i];\n      return acc;\n    }, {})\n  }\n\n  getCell(cellId) {\n    const cellIdStr = s(cellId);\n    if (cellIdStr in allCells) {\n      return allCells[cellIdStr]\n    } else {\n      return {\n        nonce: 0,\n        colors: new Array(CellSize2).fill(0),\n      }\n    }\n  }\n\n  setCell(cellId, cell) {\n    allCells[s(cellId)] = cell;\n  }\n\n  internalPaint(cellId, color) {\n    if (!(s(cellId) in allCells)) {\n      const w = Math.pow(CellSize, cellId.level + 1);\n      const x = cellId.x * w - StartOffsetX;\n      const y = cellId.y * w - StartOffsetY;\n      this.ctx.fillStyle = intToColor(color);\n      this.ctx.fillRect(x, y, w, w);\n      this.needRedraw = true;\n    }\n  }\n\n  internalRender(cellId, cell) {\n    const imageData = this.ctx.createImageData(CellSize, CellSize);\n    const data = imageData.data;\n    let off = 0;\n    for (let i = 0; i < CellSize; ++i) {\n      for (let j = 0; j < CellSize; ++j) {\n        const index = i * CellSize + j;\n        const color = cell.colors[index];\n        data[off++] = (color >> 16) & 0xff;\n        data[off++] = (color >> 8) & 0xff;\n        data[off++] = color & 0xff;\n        data[off++] = 255;\n      }\n    }\n    const w = Math.pow(CellSize, cellId.level + 1);\n    const x = cellId.x * w - StartOffsetX;\n    const y = cellId.y * w - StartOffsetY;\n    this.ctx.putImageData(imageData, x, y);\n    this.needRedraw = true;\n  }\n\n  internalRedraw() {\n    if (this.needRedraw) {\n      this.needRedraw = false;\n      this.redraw();\n    }\n  }\n\n  async refreshCells() {\n    const q = [RootCellId];\n    while (q.length > 0) {\n      const cellIds = q.splice(0, Limit);\n      const newCells = await this.fetchCells(cellIds);\n      // console.log(newCells);\n      Object.entries(newCells).forEach(([cellId, cell]) => {\n        if (cell) {\n          cellId = p(cellId);\n          console.log(cellId, cell)\n          if (cellId.level === 0) {\n            this.internalRender(cellId, cell);\n          } else {\n            let oldCell = this.getCell(cellId);\n            if (cell.nonce !== oldCell.nonce) {\n              for (let i = 0; i < CellSize; ++i) {\n                for (let j = 0; j < CellSize; ++j) {\n                  const index = i * CellSize + j;\n                  if (cell.colors[index] !== oldCell.colors[index]) {\n                    const newCellId = {\n                      level: cellId.level - 1,\n                      x: cellId.x * CellSize + j,\n                      y: cellId.y * CellSize + i,\n                    };\n                    this.internalPaint(newCellId, cell.colors[index]);\n                    q.push(newCellId);\n                  }\n                }\n              }\n            }\n          }\n          this.setCell(cellId, cell);\n        }\n      });\n      this.internalRedraw();\n    }\n  }\n};\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as twgl from 'twgl-base.js';\nimport vs from '../shaders/vs';\nimport fs from '../shaders/fs';\nimport {Board, StartOffsetX, StartOffsetY} from \"../components/Board\";\n\n\nconst Sq3 = Math.sqrt(3.0) / 2;\nconst DxA = Sq3 * 2;\nconst DyA = 0;\nconst DxB = Sq3;\nconst DyB = 1.5;\n\nconst InitialZoom = 1;\nconst MinZoom = 1 / 64;\n\nconst TexSize = 2048;\n\nlet lastMousePos = null;\nlet isDrawMode = false;\nlet globalView = {\n  a: 0,\n  b: 0,\n  zoom: InitialZoom,\n  aspect: 1,\n};\n\n\nconst state = {\n  pos: [0, 0, 1],\n};\n\nfunction setupRender(berryclub, gl) {\n  const programInfo = twgl.createProgramInfo(gl, [vs, fs])\n\n  const arrays = {\n    a_position: [\n      -Sq3 - Sq3/2, 0.75, 0,\n      Sq3 - Sq3/2, 0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n\n      Sq3 - Sq3/2, 0.75, 0,\n      Sq3 * 2 - Sq3/2, -0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n    ],\n    a_texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n\n      1, 0,\n      1, 1,\n      0, 1,\n    ],\n    a_ab: {\n      numComponents: 2, data: [\n        -0.5, -0.5,\n        TexSize - 0.5, -0.5,\n        -0.5, TexSize - 0.5,\n\n        TexSize - 0.5, -0.5,\n        TexSize - 0.5, TexSize - 0.5,\n        -0.5, TexSize - 0.5,\n      ]\n    }\n  };\n  const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n\n  const canvas = document.createElement('canvas');\n  canvas.width = TexSize;\n  canvas.height = TexSize;\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, TexSize, TexSize);\n  // ctx.fillStyle = '#222222';\n  // ctx.fillRect(0, 0, TexSize, TexSize);\n\n  const textures = twgl.createTextures(gl, {\n    fromCanvas: { src: canvas, mag: gl.NEAREST, min: gl.NEAREST, wrap: gl.CLAMP_TO_EDGE },\n  });\n\n  const board = new Board(berryclub, ctx, () => {\n    ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.fillRect(0, 0, 1, 1);\n    twgl.setTextureFromElement(gl, textures.fromCanvas, canvas);\n  });\n\n  board.refreshCells();\n  const rendering = setInterval(() => {\n    board.refreshCells();\n  }, 5000);\n\n  function render(time) {\n    twgl.resizeCanvasToDisplaySize(gl.canvas);\n    twgl.bindFramebufferInfo(gl, null);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    const uniforms = {\n      resolution: [gl.canvas.width, gl.canvas.height],\n      texSize: [TexSize - 1, TexSize - 1],\n      pos: state.pos,\n      u_diffuse: textures.fromCanvas,\n    };\n    gl.useProgram(programInfo.program);\n    twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    twgl.setUniforms(programInfo, uniforms);\n    twgl.drawBufferInfo(gl, bufferInfo);\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n}\n\nfunction dxdyToAb(dx, dy) {\n  const b = dy / DyB;\n  const a = (dx - b * DxB) / DxA;\n  return {\n    a, b,\n  }\n}\n\nfunction GlPage(props) {\n  const canvasEl = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const [view, setView] = useState(globalView);\n  const [mouseAb, setMouseAb] = useState({a: 0, b: 0});\n\n  const refresh = useCallback(() => {\n    let width = 1;\n    let height = view.aspect;\n    const zoom = view.zoom;\n    let maxA = width / zoom / DxA;\n    let maxB = height / zoom / DyB;\n\n    const db = height / zoom / DyB / 2;\n    const da = (width / zoom / 2 - db * DxB) / DxA;\n\n    const oa = view.a - da;\n    const ob = view.b - db;\n\n    Object.assign(state, {\n      pos: [view.a, view.b, zoom]\n    })\n    /*\n    if (mouseAb) {\n      let a = view.a + mouseAb.a / zoom;\n      let b = view.b + mouseAb.b / zoom;\n\n      function dist(na, nb) {\n        const cy = ((nb - b) * DyB + (na - a) * DyA);\n        const cx = ((nb - b) * DxB + (na - a) * DxA);\n        return cx * cx + cy * cy;\n      }\n\n      const ta = Math.trunc(a);\n      const tb = Math.trunc(b);\n      let best = null;\n      let minD = 10;\n\n      for (let i = -1; i < 2 ; ++i) {\n        for (let j = -1; j < 2; ++j) {\n          const a = ta + i;\n          const b = tb + j;\n          const d = dist(a, b);\n          if (d < minD + 1e-9) {\n            best = {a, b};\n            minD = d;\n          }\n        }\n      }\n\n      a = best.a;\n      b = best.b;\n\n      const cy = ((b - ob) * DyB + (a - oa) * DyA) * zoom;\n      const cx = ((b - ob) * DxB + (a - oa) * DxA) * zoom;\n      drawHex(\n        ctx,\n        cx,\n        cy,\n        zoom,\n        'rgba(0, 0, 0, 0.25)'\n      );\n    }\n   */\n\n  }, [ctx, view, mouseAb])\n\n  useEffect(() => {\n    if (ctx) {\n      refresh();\n    }\n  }, [mouseAb, view, ctx, refresh])\n\n  const berryclub = props._near.contract;\n\n  const propsDraw = props.draw;\n  useEffect(() => {\n    isDrawMode = propsDraw;\n  }, [propsDraw]);\n\n  useEffect(() => {\n    if (canvasEl.current && berryclub) {\n      console.log(\"Setup\");\n      const ctx = canvasEl.current.getContext('webgl');\n      setCtx(ctx);\n\n      setupRender(berryclub, ctx);\n      canvasEl.current.addEventListener('mousemove', (e) => {\n        const x = e.clientX;\n        const y = e.clientY;\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((x - rect.x) / rect.width - 0.5);\n        const dy = ((y - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        setMouseAb(dxdyToAb(dx, dy))\n        if (lastMousePos && !isDrawMode) {\n          const dx = (x - lastMousePos.x) / rect.width;\n          const dy = (y - lastMousePos.y) / rect.width;\n          const {a, b} = dxdyToAb(dx, dy);\n          setView((view) => {\n            return globalView = {\n              a: view.a - a / view.zoom,\n              b: view.b - b / view.zoom,\n              zoom: view.zoom,\n              aspect: view.aspect,\n            }\n          })\n        }\n        if (e.buttons & 1) {\n          lastMousePos = {x, y};\n        } else {\n          lastMousePos = null;\n        }\n      });\n\n      const drawNow = async (ab) => {\n        const view = globalView;\n        let a = (view.a + ab.a / view.zoom + 0.5) * TexSize - 0.5;\n        let b = (view.b + ab.b / view.zoom + 0.5) * TexSize - 0.5;\n\n        function dist(na, nb) {\n          const cy = ((nb - b) * DyB + (na - a) * DyA);\n          const cx = ((nb - b) * DxB + (na - a) * DxA);\n          return cx * cx + cy * cy;\n        }\n\n        const ta = Math.trunc(a);\n        const tb = Math.trunc(b);\n        let best = null;\n        let minD = 10;\n\n        for (let i = -1; i < 2 ; ++i) {\n          for (let j = -1; j < 2; ++j) {\n            const a = ta + i;\n            const b = tb + j;\n            const d = dist(a, b);\n            if (d < minD + 1e-9) {\n              best = {a, b};\n              minD = d;\n            }\n          }\n        }\n        console.log(best);\n\n        const balance = (await berryclub.get_storage_balance({\n          account_id: berryclub.account.accountId\n        })) || \"0\";\n\n        await berryclub.draw_json({\n          pixels: [{\n            x: StartOffsetX + best.a,\n            y: StartOffsetY + best.b,\n            c: 0xffffff,\n          }]\n        }, \"30000000000000\", balance.length <= 24 ? \"2000000000000000000000000\" : \"0\");\n      }\n\n      canvasEl.current.addEventListener('mousedown', (e) => {\n        if ((e.buttons & 1) && isDrawMode) {\n          const x = e.clientX;\n          const y = e.clientY;\n          const rect = e.target.getBoundingClientRect();\n          const dx = ((x - rect.x) / rect.width - 0.5);\n          const dy = ((y - rect.y) / rect.width - rect.height / rect.width * 0.5);\n          drawNow(dxdyToAb(dx, dy));\n        }\n      });\n\n      canvasEl.current.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const mb = dy / DyB;\n        const ma = (dx - mb * DxB) / DxA;\n        setView((view) => {\n          const newZoom = Math.max(MinZoom, view.zoom * Math.exp(-e.deltaY * 0.001));\n          const oa = view.a + ma / view.zoom;\n          const ob = view.b + mb / view.zoom;\n          const va = oa - ma / newZoom;\n          const vb = ob - mb / newZoom;\n\n          return globalView = {\n            a: va,\n            b: vb,\n            zoom: newZoom,\n            aspect: view.aspect,\n          }\n        })\n      });\n\n      const resize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n\n        const pixelRatio = dpr / bsr;\n        const width  = window.innerWidth || document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height = window.innerHeight|| document.documentElement.clientHeight||\n          document.body.clientHeight;\n        canvasEl.current.width = width * pixelRatio;\n        canvasEl.current.height = height * pixelRatio;\n        // ctx.scale(canvasEl.current.width, canvasEl.current.width);\n        setView((v) => Object.assign({}, v, {aspect: height / width}));\n      };\n\n      window.addEventListener('resize', resize);\n\n      resize();\n\n    }\n  }, [canvasEl, berryclub])\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        className=\"canvas\"\n        width={640}\n      />\n    </div>\n  );\n}\n\nexport default GlPage;\n","export default `\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec2 resolution;\nuniform vec3 pos;\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_ab;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nvoid main() {\n  gl_Position = vec4((a_position.xy - pos.xy * D) * vec2(2.0, 2.0 * resolution.x / resolution.y) * pos.z, a_position.zw);\n  v_texCoord = a_texcoord;\n  v_ab = a_ab;\n}\n`;\n","export default `\nprecision highp float;\n\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec3 color;\nuniform sampler2D u_diffuse;\nuniform vec2 texSize;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nfloat d(vec2 p) {\n  vec2 dx = (p - v_ab) * D;\n  return dot(dx, dx);\n}\n\nvec3 mind(vec3 a, vec2 b)\n{\n  float db = d(b); \n  return mix(vec3(b, db), a, step(a.z, db));\n}\n\nvoid main() {\n  vec2 fab = floor(v_ab);\n  vec3 best = vec3(fab, d(fab));\n  best = mind(best, fab + vec2(1.0, 0.0));\n  best = mind(best, fab + vec2(0.0, 1.0));\n  best = mind(best, fab + vec2(1.0, 1.0));\n  \n  vec4 diffuseColor = texture2D(u_diffuse, best.xy / texSize);\n  if (diffuseColor.w < 1.0) {\n    discard;\n  }\n  gl_FragColor = diffuseColor;\n}\n`;\n","import React from 'react';\nimport \"error-polyfill\";\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport * as nearAPI from 'near-api-js'\nimport ls from \"local-storage\";\nimport GlPage from \"./pages/GL\";\n\nconst IsMainnet = false; // window.location.hostname === \"berry.cards\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org', // https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1633114897352-65032726804099',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'dev-1633114897352-65032726804099',\n  walletUrl: 'https://wallet.near.org',\n};\n\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {};\n\n    this._near.lsKey = NearConfig.contractName + ':v01:';\n    this._near.lsKeyRecentCards = this._near.lsKey + \"recentCards\";\n\n    this.state = {\n      connected: false,\n      draw: false,\n      isNavCollapsed: true,\n      account: null,\n      requests: null,\n      recentCards: ls.get(this._near.lsKeyRecentCards) || [],\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._near.archivalConnection = nearAPI.Connection.fromConfig({\n      networkId: NearConfig.networkId,\n      provider: { type: 'JsonRpcProvider', args: { url: NearConfig.archivalNodeUrl } },\n      signer: { type: 'InMemorySigner', keyStore }\n    });\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n\n\n    this._near.berryclub = new nearAPI.Account(this._near.archivalConnection, 'berryclub.ek.near');\n\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_cells_json', 'get_storage_balance'],\n      changeMethods: ['draw_json'],\n    });\n\n  }\n\n  async requestSignIn(e) {\n    e && e.preventDefault();\n    const appTitle = '';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  popRequest(c) {\n    const requests = this.state.requests.slice(1);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRequest(r, c) {\n    const requests = this.state.requests.slice(0);\n    requests.push(r);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRecentCard(cardId) {\n    let recentCards = this.state.recentCards.slice(0);\n    const index = recentCards.indexOf(cardId);\n    if (index !== -1) {\n      recentCards.splice(index, 1);\n    }\n    recentCards.unshift(cardId);\n    recentCards = recentCards.slice(0, 5);\n    ls.set(this._near.lsKeyRecentCards, recentCards);\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance() {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\");\n    await this.logOut();\n    await this.requestSignIn();\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      updateState: (s, c) => this.setState(s, c),\n      popRequest: (c) => this.popRequest(c),\n      addRequest: (r, c) => this.addRequest(r, c),\n      addRecentCard: (cardId) => this.addRecentCard(cardId),\n      refreshAllowance: () => this.refreshAllowance(),\n      ...this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button onClick={() => this.setState({ draw: !this.state.draw})}>{!this.state.draw ? \"Scroll mode\" : \"Draw mode\"}</button>\n\n        <button\n          className=\"btn btn-outline-secondary\" style={{float: \"right\"}}\n          onClick={() => this.logOut()}>Sign out ({this.state.signedAccountId})</button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Sign in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        {header}\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/hexland\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n        <GlPage {...passProps}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}