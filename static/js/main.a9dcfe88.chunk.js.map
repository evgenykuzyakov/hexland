{"version":3,"sources":["App.js","index.js","pages/GL.js","shaders/vs.js","shaders/fs.js"],"names":["NearConfig","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","App","props","_near","lsKey","lsKeyRecentCards","state","connected","isNavCollapsed","account","requests","recentCards","ls","get","_initNear","then","setState","signedIn","accountId","signedAccountId","a","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","this","archivalConnection","fromConfig","provider","type","args","url","signer","walletConnection","getAccountId","berryclub","contract","viewMethods","changeMethods","e","preventDefault","requestSignIn","signOut","_accountId","c","slice","r","push","cardId","index","indexOf","splice","unshift","set","alert","logOut","passProps","updateState","s","popRequest","addRequest","addRecentCard","refreshAllowance","className","href","data-ribbon","title","React","Component","ReactDOM","render","document","getElementById","lastMousePos","Sq3","Math","sqrt","DxA","DxB","pos","decodeLine","line","buf","Buffer","from","length","Error","pixels","i","color","readUInt32LE","blockId","lines","Array","keys","connection","query","request_type","block_id","finality","undefined","account_id","method_name","args_base64","JSON","stringify","toString","rawResult","result","parse","map","imageData","Uint8ClampedArray","n","forEach","width","ImageData","setupRender","gl","programInfo","twgl","vs","fs","arrays","a_position","a_texcoord","a_ab","numComponents","data","TexSize","bufferInfo","canvas","createElement","height","ctx","getContext","clearRect","textures","fromCanvas","src","mag","NEAREST","min","wrap","CLAMP_TO_EDGE","rnd","w","floor","random","rendering","setInterval","viewPixelBoard","img","putImageData","fillStyle","fillRect","catch","console","log","setTimeout","clearInterval","requestAnimationFrame","time","viewport","uniforms","resolution","texSize","u_diffuse","useProgram","program","GlPage","canvasEl","useRef","useState","setCtx","b","zoom","aspect","view","setView","mouseAb","setMouseAb","refresh","useCallback","db","da","useEffect","current","addEventListener","x","clientX","y","clientY","rect","target","getBoundingClientRect","dx","buttons","mb","ma","newZoom","max","exp","deltaY","oa","ob","resize","pixelRatio","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","v","ref"],"mappings":"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","file":"static/js/main.a9dcfe88.chunk.js","sourcesContent":["import React from 'react';\nimport \"error-polyfill\";\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport * as nearAPI from 'near-api-js'\nimport ls from \"local-storage\";\nimport GlPage from \"./pages/GL\";\n\nconst IsMainnet = false; // window.location.hostname === \"berry.cards\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org', // https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1614796345972-8721304',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'cards.berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\n\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {};\n\n    this._near.lsKey = NearConfig.contractName + ':v01:';\n    this._near.lsKeyRecentCards = this._near.lsKey + \"recentCards\";\n\n    this.state = {\n      connected: false,\n      isNavCollapsed: true,\n      account: null,\n      requests: null,\n      recentCards: ls.get(this._near.lsKeyRecentCards) || [],\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._near.archivalConnection = nearAPI.Connection.fromConfig({\n      networkId: NearConfig.networkId,\n      provider: { type: 'JsonRpcProvider', args: { url: NearConfig.archivalNodeUrl } },\n      signer: { type: 'InMemorySigner', keyStore }\n    });\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n\n\n    this._near.berryclub = new nearAPI.Account(this._near.archivalConnection, 'berryclub.ek.near');\n\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_num_accounts', 'get_accounts', 'get_num_cards', 'get_top', 'get_rating', 'get_trade_data', 'get_card_info', 'get_account_cards'],\n      changeMethods: ['register_account', 'vote', 'buy_card'],\n    });\n\n  }\n\n  async requestSignIn(e) {\n    e && e.preventDefault();\n    const appTitle = 'Berry Cards';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  popRequest(c) {\n    const requests = this.state.requests.slice(1);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRequest(r, c) {\n    const requests = this.state.requests.slice(0);\n    requests.push(r);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRecentCard(cardId) {\n    let recentCards = this.state.recentCards.slice(0);\n    const index = recentCards.indexOf(cardId);\n    if (index !== -1) {\n      recentCards.splice(index, 1);\n    }\n    recentCards.unshift(cardId);\n    recentCards = recentCards.slice(0, 5);\n    ls.set(this._near.lsKeyRecentCards, recentCards);\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance() {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\");\n    await this.logOut();\n    await this.requestSignIn();\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      updateState: (s, c) => this.setState(s, c),\n      popRequest: (c) => this.popRequest(c),\n      addRequest: (r, c) => this.addRequest(r, c),\n      addRecentCard: (cardId) => this.addRecentCard(cardId),\n      refreshAllowance: () => this.refreshAllowance(),\n      ...this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={() => this.logOut()}>Sign out ({this.state.signedAccountId})</button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Sign in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/hexland\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n        <GlPage {...passProps}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import \"./Home.scss\";\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as twgl from 'twgl-base.js';\nimport vs from '../shaders/vs';\nimport fs from '../shaders/fs';\n\nlet lastMousePos = null;\nconst Sq3 = Math.sqrt(3.0) / 2;\nconst DxA = Sq3 * 2;\nconst DyA = 0;\nconst DxB = Sq3;\nconst DyB = 1.5;\n\nconst InitialZoom = 1;\nconst MinZoom = 1 / 64;\n\nconst TexSize = 2048;\n\nconst state = {\n  pos: [0, 0, 1],\n};\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\n\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, 'base64');\n  if (buf.length !== ExpectedLineLength) {\n    throw new Error(\"Unexpected encoded line length\");\n  }\n  let pixels = []\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    // let ownerIndex = buf.readUInt32LE(i + 4);\n    pixels.push(color);\n  }\n  return pixels;\n};\n\nasync function viewPixelBoard(berryclub, blockId) {\n  const args = {lines: [...Array(BoardHeight).keys()]};\n  const rawResult = await berryclub.connection.provider.query({\n    request_type: 'call_function',\n    block_id: blockId,\n    finality: blockId ? undefined : 'optimistic',\n    account_id: berryclub.accountId,\n    method_name: 'get_lines',\n    args_base64: Buffer.from(JSON.stringify(args), 'utf8').toString('base64'),\n  });\n  const result = rawResult.result && rawResult.result.length > 0 && JSON.parse(Buffer.from(rawResult.result).toString());\n  const lines = result.map(decodeLine);\n  const imageData = new Uint8ClampedArray(50 * 50 * 4);\n  let n = 0;\n  lines.forEach((line, i) => {\n    const width = line.length;\n    for (let i = 0; i < width; i++) {\n      const color = line[i];\n      imageData[n] = ((color >> 16) & 0xff);\n      imageData[n + 1] = ((color >> 8) & 0xff);\n      imageData[n + 2] = (color & 0xff);\n      imageData[n + 3] = 255;\n      n += 4;\n    }\n  });\n\n  return new ImageData(imageData, 50);\n}\n\n\nfunction setupRender(berryclub, gl) {\n  const programInfo = twgl.createProgramInfo(gl, [vs, fs])\n\n  const arrays = {\n    a_position: [\n      -Sq3 - Sq3/2, 0.75, 0,\n      Sq3 - Sq3/2, 0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n\n      Sq3 - Sq3/2, 0.75, 0,\n      Sq3 * 2 - Sq3/2, -0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n    ],\n    a_texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n\n      1, 0,\n      1, 1,\n      0, 1,\n    ],\n    a_ab: {\n      numComponents: 2, data: [\n        -0.5, -0.5,\n        TexSize - 0.5, -0.5,\n        -0.5, TexSize - 0.5,\n\n        TexSize - 0.5, -0.5,\n        TexSize - 0.5, TexSize - 0.5,\n        -0.5, TexSize - 0.5,\n      ]\n    }\n  };\n  const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n\n  const canvas = document.createElement('canvas');\n  canvas.width = TexSize;\n  canvas.height = TexSize;\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, TexSize, TexSize);\n  // ctx.fillStyle = '#222222';\n  // ctx.fillRect(0, 0, TexSize, TexSize);\n\n  const textures = twgl.createTextures(gl, {\n    fromCanvas: { src: canvas, mag: gl.NEAREST, min: gl.NEAREST, wrap: gl.CLAMP_TO_EDGE },\n  });\n\n  const rnd = (w) => Math.floor(Math.random() * (TexSize - w));\n\n  const rendering = setInterval(() => {\n    viewPixelBoard(berryclub, 22000000 + Math.floor(Math.random() * 10000000))\n      .then((img) => {\n        for (let i = 0; i < 10; ++i) {\n          ctx.putImageData(img, rnd(50), rnd(50));\n        }\n        ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n        ctx.fillRect(0, 0, 1, 1);\n        twgl.setTextureFromElement(gl, textures.fromCanvas, canvas);\n      })\n      .catch((e) => {\n        console.log(e);\n      })\n  }, 100);\n\n  setTimeout(() => {\n    clearInterval(rendering);\n  }, 60 * 1000);\n\n  /*\n  const ww = 100;\n  const _bleeding = setInterval(() => {\n    const x = rnd(ww);\n    const y = rnd(ww);\n    const img = ctx.getImageData(x, y, ww, ww);\n    const d = img.data;\n    for (let i = 1; i < ww - 1; ++i) {\n      for (let j = 1; j < ww - 1; ++j) {\n        let outputOffset = (i * ww + j) * 4;\n        const x = j + Math.round(Math.random() * 2) - 1;\n        const y = i + Math.round(Math.random() * 2) - 1;\n        let inputOffset = (y * ww + x) * 4;\n        d[outputOffset] = d[inputOffset];\n        d[outputOffset + 1] = d[inputOffset + 1];\n        d[outputOffset + 2] = d[inputOffset + 2];\n        d[outputOffset + 3] = d[inputOffset + 3];\n      }\n    }\n    ctx.putImageData(img, x, y);\n    ctx.fillRect(0, 0, 1, 1);\n    twgl.setTextureFromElement(gl, textures.fromCanvas, canvas);\n  }, 100);\n  */\n\n  function render(time) {\n    twgl.resizeCanvasToDisplaySize(gl.canvas);\n    twgl.bindFramebufferInfo(gl, null);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    const uniforms = {\n      resolution: [gl.canvas.width, gl.canvas.height],\n      texSize: [TexSize - 1, TexSize - 1],\n      pos: state.pos,\n      u_diffuse: textures.fromCanvas,\n    };\n    gl.useProgram(programInfo.program);\n    twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    twgl.setUniforms(programInfo, uniforms);\n    twgl.drawBufferInfo(gl, bufferInfo);\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n}\n\nfunction GlPage(props) {\n  const canvasEl = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const [view, setView] = useState({\n    a: 0,\n    b: 0,\n    zoom: InitialZoom,\n    aspect: 1,\n  });\n  const [mouseAb, setMouseAb] = useState({a: 0, b: 0});\n\n  const refresh = useCallback(() => {\n    let width = 1;\n    let height = view.aspect;\n    const zoom = view.zoom;\n    let maxA = width / zoom / DxA;\n    let maxB = height / zoom / DyB;\n\n    const db = height / zoom / DyB / 2;\n    const da = (width / zoom / 2 - db * DxB) / DxA;\n\n    const oa = view.a - da;\n    const ob = view.b - db;\n\n    Object.assign(state, {\n      pos: [view.a, view.b, zoom]\n    })\n    /*\n    if (mouseAb) {\n      let a = view.a + mouseAb.a / zoom;\n      let b = view.b + mouseAb.b / zoom;\n\n      function dist(na, nb) {\n        const cy = ((nb - b) * DyB + (na - a) * DyA);\n        const cx = ((nb - b) * DxB + (na - a) * DxA);\n        return cx * cx + cy * cy;\n      }\n\n      const ta = Math.trunc(a);\n      const tb = Math.trunc(b);\n      let best = null;\n      let minD = 10;\n\n      for (let i = -1; i < 2 ; ++i) {\n        for (let j = -1; j < 2; ++j) {\n          const a = ta + i;\n          const b = tb + j;\n          const d = dist(a, b);\n          if (d < minD + 1e-9) {\n            best = {a, b};\n            minD = d;\n          }\n        }\n      }\n\n      a = best.a;\n      b = best.b;\n\n      const cy = ((b - ob) * DyB + (a - oa) * DyA) * zoom;\n      const cx = ((b - ob) * DxB + (a - oa) * DxA) * zoom;\n      drawHex(\n        ctx,\n        cx,\n        cy,\n        zoom,\n        'rgba(0, 0, 0, 0.25)'\n      );\n    }\n   */\n\n  }, [ctx, view, mouseAb])\n\n  useEffect(() => {\n    if (ctx) {\n      refresh();\n    }\n  }, [mouseAb, view, ctx, refresh])\n\n  const berryclub = props._near.berryclub;\n\n  useEffect(() => {\n    if (canvasEl.current && berryclub) {\n      const ctx = canvasEl.current.getContext('webgl');\n      setCtx(ctx);\n\n      setupRender(berryclub, ctx);\n      canvasEl.current.addEventListener('mousemove', (e) => {\n        const x = e.clientX;\n        const y = e.clientY;\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const b = dy / DyB;\n        const a = (dx - b * DxB) / DxA;\n        setMouseAb({\n          a, b\n        })\n        if (lastMousePos) {\n          const dx = (x - lastMousePos.x) / rect.width;\n          const dy = (y - lastMousePos.y) / rect.width;\n          const db = dy / DyB;\n          const da = (dx - db * DxB) / DxA;\n          setView((view) => {\n            return {\n              a: view.a - da / view.zoom,\n              b: view.b - db / view.zoom,\n              zoom: view.zoom,\n              aspect: view.aspect,\n            }\n          })\n        }\n        if (e.buttons & 1) {\n          lastMousePos = {x, y};\n        } else {\n          lastMousePos = null;\n        }\n      });\n\n      canvasEl.current.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const mb = dy / DyB;\n        const ma = (dx - mb * DxB) / DxA;\n        setView((view) => {\n          const newZoom = Math.max(MinZoom, view.zoom * Math.exp(-e.deltaY * 0.001));\n          const oa = view.a + ma / view.zoom;\n          const ob = view.b + mb / view.zoom;\n          const va = oa - ma / newZoom;\n          const vb = ob - mb / newZoom;\n\n          return {\n            a: va,\n            b: vb,\n            zoom: newZoom,\n            aspect: view.aspect,\n          }\n        })\n      });\n\n      const resize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n\n        const pixelRatio = dpr / bsr;\n        const width  = window.innerWidth || document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height = window.innerHeight|| document.documentElement.clientHeight||\n          document.body.clientHeight;\n        canvasEl.current.width = width * pixelRatio;\n        canvasEl.current.height = height * pixelRatio;\n        // ctx.scale(canvasEl.current.width, canvasEl.current.width);\n        setView((v) => Object.assign({}, v, {aspect: height / width}));\n      };\n\n      window.addEventListener('resize', resize);\n\n      resize();\n\n    }\n  }, [canvasEl, berryclub])\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        className=\"canvas\"\n        width={640}\n      />\n    </div>\n  );\n}\n\nexport default GlPage;\n","export default `\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec2 resolution;\nuniform vec3 pos;\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_ab;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nvoid main() {\n  gl_Position = vec4((a_position.xy - pos.xy * D) * vec2(2.0, 2.0 * resolution.x / resolution.y) * pos.z, a_position.zw);\n  v_texCoord = a_texcoord;\n  v_ab = a_ab;\n}\n`;\n","export default `\nprecision highp float;\n\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec3 color;\nuniform sampler2D u_diffuse;\nuniform vec2 texSize;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nfloat d(vec2 p) {\n  vec2 dx = (p - v_ab) * D;\n  return dot(dx, dx);\n}\n\nvec3 mind(vec3 a, vec2 b)\n{\n  float db = d(b); \n  return mix(vec3(b, db), a, step(a.z, db));\n}\n\nvoid main() {\n  vec2 fab = floor(v_ab);\n  vec3 best = vec3(fab, d(fab));\n  best = mind(best, fab + vec2(1.0, 0.0));\n  best = mind(best, fab + vec2(0.0, 1.0));\n  best = mind(best, fab + vec2(1.0, 1.0));\n  \n  vec4 diffuseColor = texture2D(u_diffuse, best.xy / texSize);\n  if (diffuseColor.w < 1.0) {\n    discard;\n  }\n  gl_FragColor = diffuseColor;\n}\n`;\n"],"sourceRoot":""}