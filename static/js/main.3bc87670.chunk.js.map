{"version":3,"sources":["pages/Home.js","pages/GL.js","shaders/vs.js","shaders/fs.js","App.js","index.js"],"names":["Math","sqrt","HomePage","lastMousePos","Sq3","DxA","DxB","state","hexes","GlPage","props","canvasEl","useRef","useState","ctx","setCtx","a","b","zoom","aspect","view","setView","mouseAb","setMouseAb","refresh","useCallback","height","maxA","maxB","db","da","oa","ob","a1","floor","a2","ceil","b1","b2","ia","push","color","Object","assign","useEffect","current","getContext","gl","programInfo","twgl","arrays","position","bufferInfo","requestAnimationFrame","render","time","canvas","viewport","width","uniforms","resolution","offset","useProgram","program","forEach","pos","setupRender","addEventListener","e","x","clientX","y","clientY","rect","target","getBoundingClientRect","dx","buttons","preventDefault","mb","ma","newZoom","max","exp","deltaY","resize","pixelRatio","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","v","ref","className","NearConfig","location","hostname","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","App","_near","lsKey","lsKeyRecentCards","connected","isNavCollapsed","account","requests","recentCards","ls","get","_initNear","then","setState","signedIn","accountId","signedAccountId","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","this","walletConnection","getAccountId","contract","viewMethods","changeMethods","requestSignIn","signOut","_accountId","c","slice","r","cardId","index","indexOf","splice","unshift","set","alert","logOut","passProps","updateState","s","popRequest","addRequest","addRecentCard","refreshAllowance","href","data-ribbon","title","React","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3bc87670.chunk.js","sourcesContent":["import \"./Home.scss\";\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\n\nlet lastMousePos = null;\nconst Sq3 = Math.sqrt(3.0) / 2;\nconst DxA = Sq3 * 2;\nconst DyA = 0;\nconst DxB = Sq3;\nconst DyB = 1.5;\n\nconst InitialZoom = 1 / 30;\nconst MinZoom = 1 / 256;\n\n\nfunction drawHex(ctx, cx, cy, side, color) {\n  // `rgb(${((i * 16 % 256) + 256) % 256}, ${((j * 16 % 256) + 256) % 256},${(((i + 13 + j * 17) % 256) + 256) % 256})`\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(cx, cy - side);\n  ctx.lineTo(cx - Sq3 * side, cy - side / 2);\n  ctx.lineTo(cx - Sq3 * side, cy + side / 2);\n  ctx.lineTo(cx, cy + side);\n  ctx.lineTo( cx + Sq3 * side, cy + side / 2);\n  ctx.lineTo(cx + Sq3 * side, cy - side / 2);\n  ctx.fill();\n}\n\nfunction HomePage(props) {\n  const canvasEl = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const [view, setView] = useState({\n    a: 0,\n    b: 0,\n    zoom: InitialZoom,\n    aspect: 1,\n  });\n  const [mouseAb, setMouseAb] = useState({a: 0, b: 0});\n\n  const refresh = useCallback(() => {\n    let width = 1;\n    let height = view.aspect;\n    const zoom = view.zoom;\n    let maxA = width / zoom / DxA;\n    let maxB = height / zoom / DyB;\n\n    const db = height / zoom / DyB / 2;\n    const da = (width / zoom / 2 - db * DxB) / DxA;\n\n    const oa = view.a - da;\n    const ob = view.b - db;\n\n    let a1 = Math.floor(oa);\n    let a2 = Math.ceil(oa + maxA);\n    let b1 = Math.floor(ob);\n    let b2 = Math.floor(ob + maxB + 1);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.font = `${zoom / 3}px serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    for (let b = b1; b <= b2; ++b) {\n      for (let ia = a1; ia <= a2; ++ia) {\n        const a = ia - Math.floor((b - b1) / 2);\n        const cy = ((b - ob) * DyB + (a - oa) * DyA) * zoom;\n        const cx = ((b - ob) * DxB + (a - oa) * DxA) * zoom;\n        drawHex(\n          ctx,\n          cx,\n          cy,\n          zoom,\n          `rgb(${((a * 16 % 256) + 256) % 256}, ${((b * 16 % 256) + 256) % 256},${(((a + 13 + b * 17) % 256) + 256) % 256})`\n        );\n        // ctx.fillStyle = 'white';\n        // ctx.fillText(`${a}, ${b}`, cx, cy);\n      }\n    }\n\n    if (mouseAb) {\n      let a = view.a + mouseAb.a / zoom;\n      let b = view.b + mouseAb.b / zoom;\n\n      function dist(na, nb) {\n        const cy = ((nb - b) * DyB + (na - a) * DyA);\n        const cx = ((nb - b) * DxB + (na - a) * DxA);\n        return cx * cx + cy * cy;\n      }\n\n      const ta = Math.trunc(a);\n      const tb = Math.trunc(b);\n      let best = null;\n      let minD = 10;\n\n      for (let i = -1; i < 2 ; ++i) {\n        for (let j = -1; j < 2; ++j) {\n          const a = ta + i;\n          const b = tb + j;\n          const d = dist(a, b);\n          if (d < minD + 1e-9) {\n            best = {a, b};\n            minD = d;\n          }\n        }\n      }\n\n      a = best.a;\n      b = best.b;\n\n      const cy = ((b - ob) * DyB + (a - oa) * DyA) * zoom;\n      const cx = ((b - ob) * DxB + (a - oa) * DxA) * zoom;\n      drawHex(\n        ctx,\n        cx,\n        cy,\n        zoom,\n        'rgba(0, 0, 0, 0.25)'\n      );\n    }\n\n  }, [ctx, view, mouseAb])\n\n  useEffect(() => {\n    if (ctx) {\n      refresh();\n    }\n  }, [mouseAb, view, ctx, refresh])\n\n  useEffect(() => {\n    if (canvasEl.current) {\n      const ctx = canvasEl.current.getContext('2d');\n      setCtx(ctx);\n      canvasEl.current.addEventListener('mousemove', (e) => {\n        const x = e.clientX;\n        const y = e.clientY;\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const b = dy / DyB;\n        const a = (dx - b * DxB) / DxA;\n        setMouseAb({\n          a, b\n        })\n        if (lastMousePos) {\n          const dx = (x - lastMousePos.x) / rect.width;\n          const dy = (y - lastMousePos.y) / rect.width;\n          const db = dy / DyB;\n          const da = (dx - db * DxB) / DxA;\n          setView((view) => {\n            return {\n              a: view.a - da / view.zoom,\n              b: view.b - db / view.zoom,\n              zoom: view.zoom,\n              aspect: view.aspect,\n            }\n          })\n        }\n        if (e.buttons & 1) {\n          lastMousePos = {x, y};\n        } else {\n          lastMousePos = null;\n        }\n      });\n\n      canvasEl.current.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const mb = dy / DyB;\n        const ma = (dx - mb * DxB) / DxA;\n        setView((view) => {\n          const newZoom = Math.max(MinZoom, view.zoom * Math.exp(-e.deltaY * 0.001));\n          const oa = view.a + ma / view.zoom;\n          const ob = view.b + mb / view.zoom;\n          const va = oa - ma / newZoom;\n          const vb = ob - mb / newZoom;\n\n          return {\n            a: va,\n            b: vb,\n            zoom: newZoom,\n            aspect: view.aspect,\n          }\n        })\n      });\n\n      const resize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n\n        const pixelRatio = dpr / bsr;\n        const width  = window.innerWidth || document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height = window.innerHeight|| document.documentElement.clientHeight||\n          document.body.clientHeight;\n        canvasEl.current.width = width * pixelRatio;\n        canvasEl.current.height = height * pixelRatio;\n        ctx.scale(canvasEl.current.width, canvasEl.current.width);\n        setView((v) => Object.assign({}, v, {aspect: height / width}));\n      };\n\n      window.addEventListener('resize', resize);\n\n      resize();\n\n    }\n  }, [canvasEl])\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        className=\"canvas\"\n        width={640}\n      />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import \"./Home.scss\";\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as twgl from 'twgl-base.js';\nimport vs from '../shaders/vs';\nimport fs from '../shaders/fs';\n\nlet lastMousePos = null;\nconst Sq3 = Math.sqrt(3.0) / 2;\nconst DxA = Sq3 * 2;\nconst DyA = 0;\nconst DxB = Sq3;\nconst DyB = 1.5;\n\nconst InitialZoom = 1 / 30;\nconst MinZoom = 1 / 256;\n\n\nfunction drawHex(ctx, cx, cy, side, color) {\n  // `rgb(${((i * 16 % 256) + 256) % 256}, ${((j * 16 % 256) + 256) % 256},${(((i + 13 + j * 17) % 256) + 256) % 256})`\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(cx, cy - side);\n  ctx.lineTo(cx - Sq3 * side, cy - side / 2);\n  ctx.lineTo(cx - Sq3 * side, cy + side / 2);\n  ctx.lineTo(cx, cy + side);\n  ctx.lineTo( cx + Sq3 * side, cy + side / 2);\n  ctx.lineTo(cx + Sq3 * side, cy - side / 2);\n  ctx.fill();\n}\n\nconst state = {\n  hexes: [],\n};\n\nfunction setupRender(gl) {\n  const programInfo = twgl.createProgramInfo(gl, [vs, fs])\n\n  const arrays = {\n    position: [\n      0, 0, 0,\n      0, -1, 0,\n      -Sq3, -0.5, 0,\n\n      0, 0, 0,\n      -Sq3, -0.5, 0,\n      -Sq3, 0.5, 0,\n\n      0, 0, 0,\n      -Sq3, 0.5, 0,\n      0, 1, 0,\n\n      0, 0, 0,\n      0, 1, 0,\n      Sq3, 0.5, 0,\n\n      0, 0, 0,\n      Sq3, 0.5, 0,\n      Sq3, -0.5, 0,\n\n      0, 0, 0,\n      Sq3, -0.5, 0,\n      0, -1, 0,\n    ]\n  };\n  const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n\n  function render(time) {\n    twgl.resizeCanvasToDisplaySize(gl.canvas);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    const uniforms = {\n      resolution: [gl.canvas.width, gl.canvas.height],\n      zoom: state.zoom,\n      offset: [state.oa, state.ob],\n    };\n    gl.useProgram(programInfo.program);\n    twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    state.hexes.forEach(({a, b, color}) => {\n      uniforms.color = color;\n      uniforms.pos = [a, b];\n\n      twgl.setUniforms(programInfo, uniforms);\n      twgl.drawBufferInfo(gl, bufferInfo);\n    })\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n}\n\nfunction GlPage(props) {\n  const canvasEl = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const [view, setView] = useState({\n    a: 0,\n    b: 0,\n    zoom: InitialZoom,\n    aspect: 1,\n  });\n  const [mouseAb, setMouseAb] = useState({a: 0, b: 0});\n\n  const refresh = useCallback(() => {\n    let width = 1;\n    let height = view.aspect;\n    const zoom = view.zoom;\n    let maxA = width / zoom / DxA;\n    let maxB = height / zoom / DyB;\n\n    const db = height / zoom / DyB / 2;\n    const da = (width / zoom / 2 - db * DxB) / DxA;\n\n    const oa = view.a - da;\n    const ob = view.b - db;\n\n    let a1 = Math.floor(oa);\n    let a2 = Math.ceil(oa + maxA);\n    let b1 = Math.floor(ob);\n    let b2 = Math.floor(ob + maxB + 1);\n\n    const hexes = [];\n\n    for (let b = b1; b <= b2; ++b) {\n      for (let ia = a1; ia <= a2; ++ia) {\n        const a = ia - Math.floor((b - b1) / 2);\n        hexes.push({\n          a,\n          b,\n          color: [\n            (((a * 16 % 256) + 256) % 256) / 255,\n            (((b * 16 % 256) + 256) % 256) / 255,\n            (((a + 13 + b * 17) + 256) % 256) / 255,\n            ],\n        });\n        // ctx.fillStyle = 'white';\n        // ctx.fillText(`${a}, ${b}`, cx, cy);\n      }\n    }\n    Object.assign(state, {\n      hexes,\n      zoom,\n      oa,\n      ob,\n    })\n    /*\n    if (mouseAb) {\n      let a = view.a + mouseAb.a / zoom;\n      let b = view.b + mouseAb.b / zoom;\n\n      function dist(na, nb) {\n        const cy = ((nb - b) * DyB + (na - a) * DyA);\n        const cx = ((nb - b) * DxB + (na - a) * DxA);\n        return cx * cx + cy * cy;\n      }\n\n      const ta = Math.trunc(a);\n      const tb = Math.trunc(b);\n      let best = null;\n      let minD = 10;\n\n      for (let i = -1; i < 2 ; ++i) {\n        for (let j = -1; j < 2; ++j) {\n          const a = ta + i;\n          const b = tb + j;\n          const d = dist(a, b);\n          if (d < minD + 1e-9) {\n            best = {a, b};\n            minD = d;\n          }\n        }\n      }\n\n      a = best.a;\n      b = best.b;\n\n      const cy = ((b - ob) * DyB + (a - oa) * DyA) * zoom;\n      const cx = ((b - ob) * DxB + (a - oa) * DxA) * zoom;\n      drawHex(\n        ctx,\n        cx,\n        cy,\n        zoom,\n        'rgba(0, 0, 0, 0.25)'\n      );\n    }\n   */\n\n  }, [ctx, view, mouseAb])\n\n  useEffect(() => {\n    if (ctx) {\n      refresh();\n    }\n  }, [mouseAb, view, ctx, refresh])\n\n  useEffect(() => {\n    if (canvasEl.current) {\n      const ctx = canvasEl.current.getContext('webgl');\n      setCtx(ctx);\n\n      setupRender(ctx);\n      canvasEl.current.addEventListener('mousemove', (e) => {\n        const x = e.clientX;\n        const y = e.clientY;\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const b = dy / DyB;\n        const a = (dx - b * DxB) / DxA;\n        setMouseAb({\n          a, b\n        })\n        if (lastMousePos) {\n          const dx = (x - lastMousePos.x) / rect.width;\n          const dy = (y - lastMousePos.y) / rect.width;\n          const db = dy / DyB;\n          const da = (dx - db * DxB) / DxA;\n          setView((view) => {\n            return {\n              a: view.a - da / view.zoom,\n              b: view.b - db / view.zoom,\n              zoom: view.zoom,\n              aspect: view.aspect,\n            }\n          })\n        }\n        if (e.buttons & 1) {\n          lastMousePos = {x, y};\n        } else {\n          lastMousePos = null;\n        }\n      });\n\n      canvasEl.current.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const mb = dy / DyB;\n        const ma = (dx - mb * DxB) / DxA;\n        setView((view) => {\n          const newZoom = Math.max(MinZoom, view.zoom * Math.exp(-e.deltaY * 0.001));\n          const oa = view.a + ma / view.zoom;\n          const ob = view.b + mb / view.zoom;\n          const va = oa - ma / newZoom;\n          const vb = ob - mb / newZoom;\n\n          return {\n            a: va,\n            b: vb,\n            zoom: newZoom,\n            aspect: view.aspect,\n          }\n        })\n      });\n\n      const resize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n\n        const pixelRatio = dpr / bsr;\n        const width  = window.innerWidth || document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height = window.innerHeight|| document.documentElement.clientHeight||\n          document.body.clientHeight;\n        canvasEl.current.width = width * pixelRatio;\n        canvasEl.current.height = height * pixelRatio;\n        // ctx.scale(canvasEl.current.width, canvasEl.current.width);\n        setView((v) => Object.assign({}, v, {aspect: height / width}));\n      };\n\n      window.addEventListener('resize', resize);\n\n      resize();\n\n    }\n  }, [canvasEl])\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        className=\"canvas\"\n        width={640}\n      />\n    </div>\n  );\n}\n\nexport default GlPage;\n","export default `\n\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nattribute vec4 position;\nuniform vec2 resolution;\nuniform vec2 pos;\nuniform float zoom;\nuniform vec2 offset;\n\nvoid main() {\n  vec2 c = (pos - offset) * D;\n  gl_Position = vec4((position.xy + c) * vec2(2.0, 2.0 * resolution.x / resolution.y) * zoom - vec2(1.0, -1.0), position.zw);\n}\n`;\n","export default `\nprecision mediump float;\n\nuniform vec3 color;\n\nvoid main() {\n  gl_FragColor = vec4( color, 1.0 );\n}\n`;\n","import React from 'react';\nimport \"error-polyfill\";\nimport 'bootstrap/dist/js/bootstrap.bundle';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport * as nearAPI from 'near-api-js'\nimport HomePage from \"./pages/Home\";\nimport {HashRouter as Router, Link, Route, Switch} from 'react-router-dom'\nimport ls from \"local-storage\";\nimport GlPage from \"./pages/GL\";\n\nconst IsMainnet = window.location.hostname === \"berry.cards\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1614796345972-8721304',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'cards.berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\n\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {};\n\n    this._near.lsKey = NearConfig.contractName + ':v01:';\n    this._near.lsKeyRecentCards = this._near.lsKey + \"recentCards\";\n\n    this.state = {\n      connected: false,\n      isNavCollapsed: true,\n      account: null,\n      requests: null,\n      recentCards: ls.get(this._near.lsKeyRecentCards) || [],\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_num_accounts', 'get_accounts', 'get_num_cards', 'get_top', 'get_rating', 'get_trade_data', 'get_card_info', 'get_account_cards'],\n      changeMethods: ['register_account', 'vote', 'buy_card'],\n    });\n\n  }\n\n  async requestSignIn(e) {\n    e && e.preventDefault();\n    const appTitle = 'Berry Cards';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  popRequest(c) {\n    const requests = this.state.requests.slice(1);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRequest(r, c) {\n    const requests = this.state.requests.slice(0);\n    requests.push(r);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRecentCard(cardId) {\n    let recentCards = this.state.recentCards.slice(0);\n    const index = recentCards.indexOf(cardId);\n    if (index !== -1) {\n      recentCards.splice(index, 1);\n    }\n    recentCards.unshift(cardId);\n    recentCards = recentCards.slice(0, 5);\n    ls.set(this._near.lsKeyRecentCards, recentCards);\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance() {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\");\n    await this.logOut();\n    await this.requestSignIn();\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      updateState: (s, c) => this.setState(s, c),\n      popRequest: (c) => this.popRequest(c),\n      addRequest: (r, c) => this.addRequest(r, c),\n      addRecentCard: (cardId) => this.addRecentCard(cardId),\n      refreshAllowance: () => this.refreshAllowance(),\n      ...this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={() => this.logOut()}>Sign out ({this.state.signedAccountId})</button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Sign in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/hexland\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n        <GlPage {...passProps}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}