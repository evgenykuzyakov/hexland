{"version":3,"sources":["components/Board.js","pages/GL.js","shaders/vs.js","shaders/fs.js","App.js","index.js"],"names":["allCells","MaxSize","Math","pow","StartOffsetX","StartOffsetY","RootCellId","level","x","NumLevels","y","MinBalance","Big","DrawGas","mul","toFixed","intToColor","c","toString","padStart","s","JSON","stringify","p2c","p","trunc","Board","contract","ctx","redraw","this","setState","refreshAllowance","pixelQueue","pendingPixels","pending","sendQueueTimer","numFailedTxs","needRedraw","cellIds","a","get_cells_json","cell_ids","cells","reduce","acc","cellId","i","cellIdStr","nonce","colors","Array","CellSize","fill","cell","color","w","fillStyle","fillRect","imageData","createImageData","data","off","j","index","putImageData","get_storage_balance","account_id","account","accountId","balance","accountBalance","sort","b","localeCompare","pixels","splice","refreshAccountBalance","draw_json","lt","indexOf","console","log","concat","forEach","ready","clearTimeout","length","sendQueue","setTimeout","pingQueue","getCell","internalRedraw","ab","sp","push","modifyPixel","q","fetchCells","newCells","Object","entries","parse","internalRender","oldCell","newCellId","internalPaint","setCell","Sq3","sqrt","DxA","DxB","lastMousePos","isDrawMode","view","zoom","aspect","dxdyToAb","dx","dy","GlPage","props","canvasEl","useRef","berryclub","_near","propsDraw","draw","useEffect","current","getContext","drawNow","dist","na","nb","cy","cx","ta","tb","best","minD","d","board","gl","programInfo","twgl","arrays","a_position","a_texcoord","a_ab","numComponents","TexSize","bufferInfo","canvas","document","createElement","width","height","clearRect","textures","fromCanvas","src","mag","NEAREST","min","wrap","CLAMP_TO_EDGE","refreshCells","setInterval","requestAnimationFrame","render","time","viewport","uniforms","resolution","texSize","pos","u_diffuse","useProgram","program","setupRender","addEventListener","e","clientX","clientY","rect","target","getBoundingClientRect","buttons","preventDefault","mb","ma","newZoom","max","exp","deltaY","oa","ob","resize","pixelRatio","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","assign","ref","className","NearConfig","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","App","lsKey","lsKeyRecentCards","state","connected","isNavCollapsed","requests","recentCards","ls","get","_initNear","then","signedIn","signedAccountId","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","walletConnection","getAccountId","viewMethods","changeMethods","requestSignIn","signOut","_accountId","slice","r","cardId","unshift","set","alert","logOut","passProps","header","onClick","style","float","div","role","aria-hidden","href","data-ribbon","title","React","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.194ac4ad.chunk.js","sourcesContent":["import Big from \"big.js\";\n\nconst allCells = {};\n\nconst Limit = 16;\nconst CellSize = 16;\nconst CellSize2 = CellSize * CellSize;\nconst NumLevels = 3;\nconst MaxNumberLevels = 5;\nconst MaxSize = Math.pow(CellSize, MaxNumberLevels);\nexport const StartOffsetX = MaxSize / 2;\nexport const StartOffsetY = MaxSize / 2;\n\nconst RootCellId = {\n  level: NumLevels,\n  x: StartOffsetX / Math.pow(CellSize, NumLevels + 1),\n  y: StartOffsetY / Math.pow(CellSize, NumLevels + 1),\n};\n\nconst MinBalance = Big(10).pow(23);\nconst DrawGas = Big(100).mul(Big(10).pow(12)).toFixed(0);\nconst UnclaimedDefaultColor = 0x333333;\n\nconst intToColor = (c) => `#${(c & 0xffffff).toString(16).padStart(6, \"0\")}`;\nconst s = (c) => JSON.stringify(c);\nconst p = (c) => JSON.parse(c);\nconst p2c = (p) => ({\n  x: Math.trunc(p.x / CellSize),\n  y: Math.trunc(p.y / CellSize),\n  level: 0,\n});\n\nconst BatchOfPixels = 100;\nconst BatchTimeout = 250;\n\nexport class Board {\n  constructor(contract, ctx, redraw) {\n    this.contract = contract;\n    this.setState = contract.setState;\n    this.refreshAllowance = contract.refreshAllowance;\n    this.ctx = ctx;\n    this.redraw = redraw;\n    this.pixelQueue = [];\n    this.pendingPixels = [];\n    this.pending = {};\n    this.sendQueueTimer = null;\n    this.numFailedTxs = 0;\n\n    this.needRedraw = false;\n  }\n\n  async fetchCells(cellIds) {\n    const cells = await this.contract.get_cells_json({cell_ids: cellIds});\n    return cellIds.reduce((acc, cellId, i) => {\n      acc[s(cellId)] = cells[i];\n      return acc;\n    }, {})\n  }\n\n  getCell(cellId) {\n    const cellIdStr = s(cellId);\n    if (cellIdStr in allCells) {\n      return allCells[cellIdStr]\n    } else {\n      return {\n        nonce: 0,\n        colors: new Array(CellSize2).fill(0),\n      }\n    }\n  }\n\n  setCell(cellId, cell) {\n    allCells[s(cellId)] = cell;\n  }\n\n  internalPaint(cellId, color) {\n    if (!(s(cellId) in allCells)) {\n      const w = Math.pow(CellSize, cellId.level + 1);\n      const x = cellId.x * w - StartOffsetX;\n      const y = cellId.y * w - StartOffsetY;\n      this.ctx.fillStyle = intToColor(color || UnclaimedDefaultColor);\n      this.ctx.fillRect(x, y, w, w);\n      this.needRedraw = true;\n    }\n  }\n\n  internalRender(cellId, cell) {\n    const imageData = this.ctx.createImageData(CellSize, CellSize);\n    const data = imageData.data;\n    let off = 0;\n    for (let i = 0; i < CellSize; ++i) {\n      for (let j = 0; j < CellSize; ++j) {\n        const index = i * CellSize + j;\n        const color = cell.colors[index];\n        data[off++] = (color >> 16) & 0xff;\n        data[off++] = (color >> 8) & 0xff;\n        data[off++] = color & 0xff;\n        data[off++] = 255;\n      }\n    }\n    const w = Math.pow(CellSize, cellId.level + 1);\n    const x = cellId.x * w - StartOffsetX;\n    const y = cellId.y * w - StartOffsetY;\n    this.ctx.putImageData(imageData, x, y);\n    this.needRedraw = true;\n  }\n\n  internalRedraw() {\n    if (this.needRedraw) {\n      this.needRedraw = false;\n      this.redraw();\n    }\n  }\n\n  async refreshAccountBalance() {\n    const balance = Big(await this.contract.get_storage_balance({\n      account_id: this.contract.account.accountId\n    }) || \"0\");\n    this.setState({\n      accountBalance: balance,\n    });\n    return balance;\n  }\n\n  async sendQueue() {\n    this.pixelQueue.sort((a, b) => s(p2c(a)).localeCompare(s(p2c(b))))\n    const pixels = this.pixelQueue.splice(0, BatchOfPixels);\n    this.pendingPixels = pixels;\n\n    const balance = await this.refreshAccountBalance();\n\n    try {\n      await this.contract.draw_json({\n        pixels\n      }, DrawGas, balance.lt(MinBalance) ? \"1000000000000000000000000\" : \"0\");\n      this.numFailedTxs = 0;\n    } catch (error) {\n      const msg = error.toString();\n      if (msg.indexOf(\"does not have enough balance\") !== -1) {\n        await this.refreshAllowance();\n        return;\n      }\n      console.log(\"Failed to send a transaction\", error);\n      this.numFailedTxs += 1;\n      if (this.numFailedTxs < 3) {\n        this.pixelQueue = this.pixelQueue.concat(this.pendingPixels);\n        this.pendingPixels = [];\n      } else {\n        this.pendingPixels = [];\n        this.pixelQueue = [];\n      }\n    }\n    try {\n      await this.refreshAccountBalance();\n    } catch (e) {\n      // ignore\n    }\n    this.pendingPixels.forEach((p) => delete this.pending[s(p)]);\n    this.pendingPixels = [];\n  }\n\n  async pingQueue(ready) {\n    if (this.sendQueueTimer) {\n      clearTimeout(this.sendQueueTimer);\n      this.sendQueueTimer = null;\n    }\n\n    if (\n      this.pendingPixels.length === 0 &&\n      (this.pixelQueue.length >= BatchOfPixels || ready)\n    ) {\n      await this.sendQueue();\n    }\n    if (this.pixelQueue.length > 0) {\n      this.sendQueueTimer = setTimeout(async () => {\n        await this.pingQueue(true);\n      }, BatchTimeout);\n    }\n  }\n\n  modifyPixel(p) {\n    const cellId = p2c(p);\n    const cell = this.getCell(cellId);\n    const index = (p.y - cellId.y * CellSize) * CellSize + p.x - cellId.x * CellSize;\n    cell.colors[index] = p.c;\n\n    const x = p.x - StartOffsetX;\n    const y = p.y - StartOffsetY;\n    this.ctx.fillStyle = intToColor(p.c);\n    this.ctx.fillRect(x, y, 1, 1);\n    this.needRedraw = true;\n    setTimeout(() => {\n      this.internalRedraw();\n    }, 100)\n  }\n\n  draw(ab) {\n    const c = 0xffffff;\n    const p = {\n      x: StartOffsetX + ab.a,\n      y: StartOffsetY + ab.b,\n      c,\n    };\n    const sp = s(p);\n    if (!(sp in this.pending)) {\n      this.pending[sp] = true;\n      this.pixelQueue.push(p);\n\n      this.modifyPixel(p);\n    }\n\n    this.pingQueue(false);\n  }\n\n  async refreshCells() {\n    const q = [RootCellId];\n    while (q.length > 0) {\n      const cellIds = q.splice(0, Limit);\n      const newCells = await this.fetchCells(cellIds);\n      Object.entries(newCells).forEach(([cellId, cell]) => {\n        if (cell) {\n          cellId = p(cellId);\n          if (cellId.level === 0) {\n            this.internalRender(cellId, cell);\n          } else {\n            let oldCell = this.getCell(cellId);\n            if (cell.nonce !== oldCell.nonce) {\n              for (let i = 0; i < CellSize; ++i) {\n                for (let j = 0; j < CellSize; ++j) {\n                  const index = i * CellSize + j;\n                  const newCellId = {\n                    level: cellId.level - 1,\n                    x: cellId.x * CellSize + j,\n                    y: cellId.y * CellSize + i,\n                  };\n                  this.internalPaint(newCellId, cell.colors[index]);\n                  if (cell.colors[index] !== oldCell.colors[index]) {\n                    q.push(newCellId);\n                  }\n                }\n              }\n            }\n          }\n          this.setCell(cellId, cell);\n        }\n      });\n      this.internalRedraw();\n    }\n  }\n};\n","import React, {useEffect, useRef} from 'react';\nimport * as twgl from 'twgl-base.js';\nimport vs from '../shaders/vs';\nimport fs from '../shaders/fs';\nimport {Board} from \"../components/Board\";\n\n\nconst Sq3 = Math.sqrt(3.0) / 2;\nconst DxA = Sq3 * 2;\nconst DyA = 0;\nconst DxB = Sq3;\nconst DyB = 1.5;\n\nconst InitialZoom = 1;\nconst MinZoom = 1 / 64;\n\nconst TexSize = 2048;\n\nlet lastMousePos = null;\nlet isDrawMode = false;\nlet view = {\n  a: 0,\n  b: 0,\n  zoom: InitialZoom,\n  aspect: 1,\n};\n\n\nfunction setupRender(berryclub, gl) {\n  const programInfo = twgl.createProgramInfo(gl, [vs, fs])\n\n  const arrays = {\n    a_position: [\n      -Sq3 - Sq3/2, 0.75, 0,\n      Sq3 - Sq3/2, 0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n\n      Sq3 - Sq3/2, 0.75, 0,\n      Sq3 * 2 - Sq3/2, -0.75, 0,\n      0 - Sq3/2, -0.75, 0,\n    ],\n    a_texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n\n      1, 0,\n      1, 1,\n      0, 1,\n    ],\n    a_ab: {\n      numComponents: 2, data: [\n        -0.5, -0.5,\n        TexSize - 0.5, -0.5,\n        -0.5, TexSize - 0.5,\n\n        TexSize - 0.5, -0.5,\n        TexSize - 0.5, TexSize - 0.5,\n        -0.5, TexSize - 0.5,\n      ]\n    }\n  };\n  const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n\n  const canvas = document.createElement('canvas');\n  canvas.width = TexSize;\n  canvas.height = TexSize;\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, TexSize, TexSize);\n  // ctx.fillStyle = '#222222';\n  // ctx.fillRect(0, 0, TexSize, TexSize);\n\n  const textures = twgl.createTextures(gl, {\n    fromCanvas: { src: canvas, mag: gl.NEAREST, min: gl.NEAREST, wrap: gl.CLAMP_TO_EDGE },\n  });\n\n  const board = new Board(berryclub, ctx, () => {\n    ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.fillRect(0, 0, 1, 1);\n    twgl.setTextureFromElement(gl, textures.fromCanvas, canvas);\n  });\n\n  board.refreshCells();\n  setInterval(() => {\n    board.refreshCells();\n  }, 5000);\n\n  function render(time) {\n    twgl.resizeCanvasToDisplaySize(gl.canvas);\n    twgl.bindFramebufferInfo(gl, null);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    const uniforms = {\n      resolution: [gl.canvas.width, gl.canvas.height],\n      texSize: [TexSize - 1, TexSize - 1],\n      pos: [view.a, view.b, view.zoom],\n      u_diffuse: textures.fromCanvas,\n    };\n    gl.useProgram(programInfo.program);\n    twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    twgl.setUniforms(programInfo, uniforms);\n    twgl.drawBufferInfo(gl, bufferInfo);\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n\n  return board;\n}\n\nfunction dxdyToAb(dx, dy) {\n  const b = dy / DyB;\n  const a = (dx - b * DxB) / DxA;\n  return {\n    a, b,\n  }\n}\n\nfunction GlPage(props) {\n  const canvasEl = useRef(null);\n  const berryclub = props._near.contract;\n  if (berryclub) {\n    berryclub.setState = props.setState;\n    berryclub.refreshAllowance = props.refreshAllowance\n  }\n\n  const propsDraw = props.draw;\n  useEffect(() => {\n    isDrawMode = propsDraw;\n  }, [propsDraw]);\n\n  useEffect(() => {\n    if (canvasEl.current && berryclub) {\n      console.log(\"Setup\");\n      const ctx = canvasEl.current.getContext('webgl');\n\n      const drawNow = async (ab) => {\n        let a = (view.a + ab.a / view.zoom + 0.5) * TexSize - 0.5;\n        let b = (view.b + ab.b / view.zoom + 0.5) * TexSize - 0.5;\n\n        function dist(na, nb) {\n          const cy = ((nb - b) * DyB + (na - a) * DyA);\n          const cx = ((nb - b) * DxB + (na - a) * DxA);\n          return cx * cx + cy * cy;\n        }\n\n        const ta = Math.trunc(a);\n        const tb = Math.trunc(b);\n        let best = null;\n        let minD = 10;\n\n        for (let i = -1; i < 2 ; ++i) {\n          for (let j = -1; j < 2; ++j) {\n            const a = ta + i;\n            const b = tb + j;\n            const d = dist(a, b);\n            if (d < minD + 1e-9) {\n              best = {a, b};\n              minD = d;\n            }\n          }\n        }\n        board.draw(best);\n      }\n\n      const board = setupRender(berryclub, ctx);\n      canvasEl.current.addEventListener('mousemove', (e) => {\n        const x = e.clientX;\n        const y = e.clientY;\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((x - rect.x) / rect.width - 0.5);\n        const dy = ((y - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const ab = dxdyToAb(dx, dy);\n        if ((e.buttons & 1) && isDrawMode) {\n          drawNow(ab);\n        } else if (lastMousePos && !isDrawMode) {\n          const dx = (x - lastMousePos.x) / rect.width;\n          const dy = (y - lastMousePos.y) / rect.width;\n          const {a, b} = dxdyToAb(dx, dy);\n          view = {\n            a: view.a - a / view.zoom,\n            b: view.b - b / view.zoom,\n            zoom: view.zoom,\n            aspect: view.aspect,\n          };\n        }\n        if (e.buttons & 1) {\n          lastMousePos = {x, y};\n        } else {\n          lastMousePos = null;\n        }\n      });\n\n\n      canvasEl.current.addEventListener('mousedown', (e) => {\n        if ((e.buttons & 1) && isDrawMode) {\n          const x = e.clientX;\n          const y = e.clientY;\n          const rect = e.target.getBoundingClientRect();\n          const dx = ((x - rect.x) / rect.width - 0.5);\n          const dy = ((y - rect.y) / rect.width - rect.height / rect.width * 0.5);\n          drawNow(dxdyToAb(dx, dy));\n        }\n      });\n\n      canvasEl.current.addEventListener('wheel', (e) => {\n        e.preventDefault();\n        const rect = e.target.getBoundingClientRect();\n        const dx = ((e.clientX - rect.x) / rect.width - 0.5);\n        const dy = ((e.clientY - rect.y) / rect.width - rect.height / rect.width * 0.5);\n        const mb = dy / DyB;\n        const ma = (dx - mb * DxB) / DxA;\n\n        const newZoom = Math.max(MinZoom, view.zoom * Math.exp(-e.deltaY * 0.001));\n        const oa = view.a + ma / view.zoom;\n        const ob = view.b + mb / view.zoom;\n        const va = oa - ma / newZoom;\n        const vb = ob - mb / newZoom;\n\n        view = {\n          a: va,\n          b: vb,\n          zoom: newZoom,\n          aspect: view.aspect,\n        };\n\n      });\n\n      const resize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n          ctx.mozBackingStorePixelRatio ||\n          ctx.msBackingStorePixelRatio ||\n          ctx.oBackingStorePixelRatio ||\n          ctx.backingStorePixelRatio || 1;\n\n        const pixelRatio = dpr / bsr;\n        const width  = window.innerWidth || document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        const height = window.innerHeight|| document.documentElement.clientHeight||\n          document.body.clientHeight;\n        canvasEl.current.width = width * pixelRatio;\n        canvasEl.current.height = height * pixelRatio;\n        // ctx.scale(canvasEl.current.width, canvasEl.current.width);\n        view = Object.assign({}, view, {aspect: height / width})\n      };\n\n      window.addEventListener('resize', resize);\n\n      resize();\n\n    }\n  }, [canvasEl, berryclub])\n\n  return (\n    <div>\n      <canvas\n        ref={canvasEl}\n        className=\"canvas\"\n        width={640}\n      />\n    </div>\n  );\n}\n\nexport default GlPage;\n","export default `\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec2 resolution;\nuniform vec3 pos;\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_ab;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nvoid main() {\n  gl_Position = vec4((a_position.xy - pos.xy * D) * vec2(2.0, 2.0 * resolution.x / resolution.y) * pos.z, a_position.zw);\n  v_texCoord = a_texcoord;\n  v_ab = a_ab;\n}\n`;\n","export default `\nprecision highp float;\n\nconst float Sq3 = sqrt(3.0) / 2.0;\nconst mat2 D = mat2(Sq3 * 2.0, Sq3, 0.0, -1.5);\n\nuniform vec3 color;\nuniform sampler2D u_diffuse;\nuniform vec2 texSize;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_ab;\n\nfloat d(vec2 p) {\n  vec2 dx = (p - v_ab) * D;\n  return dot(dx, dx);\n}\n\nvec3 mind(vec3 a, vec2 b)\n{\n  float db = d(b); \n  return mix(vec3(b, db), a, step(a.z, db));\n}\n\nvoid main() {\n  vec2 fab = floor(v_ab);\n  vec3 best = vec3(fab, d(fab));\n  best = mind(best, fab + vec2(1.0, 0.0));\n  best = mind(best, fab + vec2(0.0, 1.0));\n  best = mind(best, fab + vec2(1.0, 1.0));\n  \n  vec4 diffuseColor = texture2D(u_diffuse, best.xy / texSize);\n  if (diffuseColor.w < 1.0) {\n    discard;\n  }\n  gl_FragColor = diffuseColor;\n}\n`;\n","import React from 'react';\nimport \"error-polyfill\";\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport * as nearAPI from 'near-api-js'\nimport ls from \"local-storage\";\nimport GlPage from \"./pages/GL\";\nimport Big from \"big.js\";\n\nconst IsMainnet = false; // window.location.hostname === \"berry.cards\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org', // https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1633114897352-65032726804099',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'dev-1633114897352-65032726804099',\n  walletUrl: 'https://wallet.near.org',\n};\n\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {};\n\n    this._near.lsKey = NearConfig.contractName + ':v01:';\n    this._near.lsKeyRecentCards = this._near.lsKey + \"recentCards\";\n\n    this.state = {\n      connected: false,\n      draw: false,\n      isNavCollapsed: true,\n      account: null,\n      accountBalance: Big(0),\n      requests: null,\n      recentCards: ls.get(this._near.lsKeyRecentCards) || [],\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    // this._near.archivalConnection = nearAPI.Connection.fromConfig({\n    //   networkId: NearConfig.networkId,\n    //   provider: { type: 'JsonRpcProvider', args: { url: NearConfig.archivalNodeUrl } },\n    //   signer: { type: 'InMemorySigner', keyStore }\n    // });\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n\n\n    // this._near.berryclub = new nearAPI.Account(this._near.archivalConnection, 'berryclub.ek.near');\n    //\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_cells_json', 'get_storage_balance'],\n      changeMethods: ['draw_json'],\n    });\n\n    if (this._near.accountId) {\n      const balance = Big(await this._near.contract.get_storage_balance({\n        account_id: this._near.accountId\n      }) || \"0\");\n      this.setState({\n        accountBalance: balance,\n      })\n    }\n\n  }\n\n  async requestSignIn(e) {\n    e && e.preventDefault();\n    const appTitle = '';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  popRequest(c) {\n    const requests = this.state.requests.slice(1);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRequest(r, c) {\n    const requests = this.state.requests.slice(0);\n    requests.push(r);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRecentCard(cardId) {\n    let recentCards = this.state.recentCards.slice(0);\n    const index = recentCards.indexOf(cardId);\n    if (index !== -1) {\n      recentCards.splice(index, 1);\n    }\n    recentCards.unshift(cardId);\n    recentCards = recentCards.slice(0, 5);\n    ls.set(this._near.lsKeyRecentCards, recentCards);\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance() {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\");\n    await this.logOut();\n    await this.requestSignIn();\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      setState: (s, c) => this.setState(s, c),\n      refreshAllowance: () => this.refreshAllowance(),\n      ...this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button onClick={() => this.setState({ draw: !this.state.draw})}>{!this.state.draw ? \"Scroll mode\" : \"Draw mode\"}</button>\n\n        <div style={{float: \"right\"}}>\n          <label>\n            Account Balance: {this.state.accountBalance.div(Big(10).pow(24)).toFixed(3)} NEAR\n          </label>\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => this.logOut()}>Sign out ({this.state.signedAccountId})</button>\n        </div>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Sign in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        {header}\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/hexland\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n        <GlPage {...passProps}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}